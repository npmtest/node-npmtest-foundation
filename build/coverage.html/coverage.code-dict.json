{"/home/travis/build/npmtest/node-npmtest-foundation/test.js":"/* istanbul instrument in package npmtest_foundation */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-foundation/lib.npmtest_foundation.js":"/* istanbul instrument in package npmtest_foundation */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_foundation = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_foundation = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-foundation/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-foundation && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_foundation */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_foundation\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_foundation.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_foundation.rollup.js'] =\n            local.assetsDict['/assets.npmtest_foundation.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_foundation.__dirname + '/lib.npmtest_foundation.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/stylus/foundation.js":"'use strict';\n\nvar path = require('path');\nvar packageInfo = require('../package.json');\nvar libPath = __dirname;\nvar dependencies = [require('stylus-type-utils')];\n\n/**\n * Return the plugin callback for stylus.\n *\n * @return {Function}\n * @api public\n */\nexports = module.exports = function plugin() {\n  return function(stylus){\n    stylus.include(libPath);\n    dependencies.forEach(function(dep) {\n      stylus.use(dep());\n    });\n  };\n};\n\n\n/**\n * Theme name.\n */\nexports.theme = packageInfo.name;\n\n/**\n * Library version.\n */\nexports.version = packageInfo.version;\n\n/**\n * Stylus path.\n */\nexports.path = libPath;\n\n/**\n * Dependent modules\n * \n * @type {Array}\n */\nexports.dependencies = dependencies;\n\n/**\n * Assets paths\n * \n * @type {Array}\n */\nexports.assetPaths = [path.join(__dirname, '..', 'js')];\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/Gruntfile.js":"module.exports = function(grunt) {\n\n    grunt.loadNpmTasks('grunt-contrib-qunit');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n\n    grunt.initConfig({\n      qunit: {\n        all: ['test/javascripts/tests/**/*.html']\n      },\n      watch: {\n        all: {\n            files: [\n                'test/javascripts/tests/**/*.html',\n                'test/javascripts/tests/**/*.js',\n                'lib/assets/javascripts/foundation/*.js'\n            ],\n            tasks: 'default',\n            options: {\n                interrupt: true\n            }\n        }\n      }\n    });\n\n    // Default task.\n    grunt.registerTask('default', ['qunit']);\n};","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.alerts.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.alerts = {\n    name : 'alerts',\n\n    version : '4.0.0',\n\n    settings : {\n      speed: 300, // fade out speed\n      callback: function (){}\n    },\n\n    init : function (scope, method, options) {\n      this.scope = scope || this.scope;\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, method);\n      }\n\n      if (typeof method != 'string') {\n        if (!this.settings.init) this.events();\n\n        return this.settings.init;\n      } else {\n        return this[method].call(this, options);\n      }\n    },\n\n    events : function () {\n      var self = this;\n\n      $(this.scope).on('click.fndtn.alerts', '[data-alert] a.close', function (e) {\n        e.preventDefault();\n        $(this).closest(\"[data-alert]\").fadeOut(self.speed, function () {\n          $(this).remove();\n          self.settings.callback();\n        });\n      });\n\n      this.settings.init = true;\n    },\n\n    off : function () {\n      $(this.scope).off('.fndtn.alerts');\n    },\n\n    reflow : function () {}\n  };\n}(Foundation.zj, this, this.document));","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.clearing.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.clearing = {\n    name : 'clearing',\n\n    version : '4.1.3',\n\n    settings : {\n      templates : {\n        viewing : '<a href=\"#\" class=\"clearing-close\">&times;</a>' +\n          '<div class=\"visible-img\" style=\"display: none\"><img src=\"//:0\">' +\n          '<p class=\"clearing-caption\"></p><a href=\"#\" class=\"clearing-main-prev\"><span></span></a>' +\n          '<a href=\"#\" class=\"clearing-main-next\"><span></span></a></div>'\n      },\n\n      // comma delimited list of selectors that, on click, will close clearing,\n      // add 'div.clearing-blackout, div.visible-img' to close on background click\n      close_selectors : '.clearing-close',\n\n      // event initializers and locks\n      init : false,\n      locked : false\n    },\n\n    init : function (scope, method, options) {\n      var self = this;\n      Foundation.inherit(this, 'set_data get_data remove_data throttle data_options');\n\n      if (typeof method === 'object') {\n        options = $.extend(true, this.settings, method);\n      }\n\n      if (typeof method != 'string') {\n        $(this.scope).find('ul[data-clearing]').each(function () {\n          var $el = $(this),\n              options = options || {},\n              lis = $el.find('li'),\n              settings = self.get_data($el);\n\n          if (!settings && lis.length > 0) {\n            options.$parent = $el.parent();\n\n            self.set_data($el, $.extend({}, self.settings, options, self.data_options($el)));\n\n            self.assemble($el.find('li'));\n\n            if (!self.settings.init) {\n              self.events().swipe_events();\n            }\n          }\n        });\n\n        return this.settings.init;\n      } else {\n        // fire method\n        return this[method].call(this, options);\n      }\n    },\n\n    // event binding and initial setup\n\n    events : function () {\n      var self = this;\n\n      $(this.scope)\n        .on('click.fndtn.clearing', 'ul[data-clearing] li',\n          function (e, current, target) {\n            var current = current || $(this),\n                target = target || current,\n                next = current.next('li'),\n                settings = self.get_data(current.parent()),\n                image = $(e.target);\n\n            e.preventDefault();\n            if (!settings) self.init();\n\n            // if clearing is open and the current image is\n            // clicked, go to the next image in sequence\n            if (target.hasClass('visible') \n              && current[0] === target[0] \n              && next.length > 0 && self.is_open(current)) {\n              target = next;\n              image = target.find('img');\n            }\n\n            // set current and target to the clicked li if not otherwise defined.\n            self.open(image, current, target);\n            self.update_paddles(target);\n          })\n\n        .on('click.fndtn.clearing', '.clearing-main-next',\n          function (e) { this.nav(e, 'next') }.bind(this))\n        .on('click.fndtn.clearing', '.clearing-main-prev',\n          function (e) { this.nav(e, 'prev') }.bind(this))\n        .on('click.fndtn.clearing', this.settings.close_selectors,\n          function (e) { Foundation.libs.clearing.close(e, this) })\n        .on('keydown.fndtn.clearing',\n          function (e) { this.keydown(e) }.bind(this));\n\n      $(window).on('resize.fndtn.clearing',\n        function () { this.resize() }.bind(this));\n\n      this.settings.init = true;\n      return this;\n    },\n\n    swipe_events : function () {\n      var self = this;\n\n      $(this.scope)\n        .on('touchstart.fndtn.clearing', '.visible-img', function(e) {\n          if (!e.touches) { e = e.originalEvent; }\n          var data = {\n                start_page_x: e.touches[0].pageX,\n                start_page_y: e.touches[0].pageY,\n                start_time: (new Date()).getTime(),\n                delta_x: 0,\n                is_scrolling: undefined\n              };\n\n          $(this).data('swipe-transition', data);\n          e.stopPropagation();\n        })\n        .on('touchmove.fndtn.clearing', '.visible-img', function(e) {\n          if (!e.touches) { e = e.originalEvent; }\n          // Ignore pinch/zoom events\n          if(e.touches.length > 1 || e.scale && e.scale !== 1) return;\n\n          var data = $(this).data('swipe-transition');\n\n          if (typeof data === 'undefined') {\n            data = {};\n          }\n\n          data.delta_x = e.touches[0].pageX - data.start_page_x;\n\n          if ( typeof data.is_scrolling === 'undefined') {\n            data.is_scrolling = !!( data.is_scrolling || Math.abs(data.delta_x) < Math.abs(e.touches[0].pageY - data.start_page_y) );\n          }\n\n          if (!data.is_scrolling && !data.active) {\n            e.preventDefault();\n            var direction = (data.delta_x < 0) ? 'next' : 'prev';\n            data.active = true;\n            self.nav(e, direction);\n          }\n        })\n        .on('touchend.fndtn.clearing', '.visible-img', function(e) {\n          $(this).data('swipe-transition', {});\n          e.stopPropagation();\n        });\n    },\n\n    assemble : function ($li) {\n      var $el = $li.parent();\n      $el.after('<div id=\"foundationClearingHolder\"></div>');\n\n      var holder = $('#foundationClearingHolder'),\n          settings = this.get_data($el),\n          grid = $el.detach(),\n          data = {\n            grid: '<div class=\"carousel\">' + this.outerHTML(grid[0]) + '</div>',\n            viewing: settings.templates.viewing\n          },\n          wrapper = '<div class=\"clearing-assembled\"><div>' + data.viewing +\n            data.grid + '</div></div>';\n\n      return holder.after(wrapper).remove();\n    },\n\n    // event callbacks\n\n    open : function ($image, current, target) {\n      var root = target.closest('.clearing-assembled'),\n          container = root.find('div').first(),\n          visible_image = container.find('.visible-img'),\n          image = visible_image.find('img').not($image);\n\n      if (!this.locked()) {\n        // set the image to the selected thumbnail\n        image\n          .attr('src', this.load($image))\n          .css('visibility', 'hidden');\n\n        this.loaded(image, function () {\n          image.css('visibility', 'visible');\n          // toggle the gallery\n          root.addClass('clearing-blackout');\n          container.addClass('clearing-container');\n          visible_image.show();\n          this.fix_height(target)\n            .caption(visible_image.find('.clearing-caption'), $image)\n            .center(image)\n            .shift(current, target, function () {\n              target.siblings().removeClass('visible');\n              target.addClass('visible');\n            });\n        }.bind(this));\n      }\n    },\n\n    close : function (e, el) {\n      e.preventDefault();\n\n      var root = (function (target) {\n            if (/blackout/.test(target.selector)) {\n              return target;\n            } else {\n              return target.closest('.clearing-blackout');\n            }\n          }($(el))), container, visible_image;\n\n      if (el === e.target && root) {\n        container = root.find('div').first();\n        visible_image = container.find('.visible-img');\n        this.settings.prev_index = 0;\n        root.find('ul[data-clearing]')\n          .attr('style', '').closest('.clearing-blackout')\n          .removeClass('clearing-blackout');\n        container.removeClass('clearing-container');\n        visible_image.hide();\n      }\n\n      return false;\n    },\n\n    is_open : function (current) {\n      return current.parent().attr('style').length > 0;\n    },\n\n    keydown : function (e) {\n      var clearing = $('.clearing-blackout').find('ul[data-clearing]');\n\n      if (e.which === 39) this.go(clearing, 'next');\n      if (e.which === 37) this.go(clearing, 'prev');\n      if (e.which === 27) $('a.clearing-close').trigger('click');\n    },\n\n    nav : function (e, direction) {\n      var clearing = $('.clearing-blackout').find('ul[data-clearing]');\n\n      e.preventDefault();\n      this.go(clearing, direction);\n    },\n\n    resize : function () {\n      var image = $('.clearing-blackout .visible-img').find('img');\n\n      if (image.length) {\n        this.center(image);\n      }\n    },\n\n    // visual adjustments\n    fix_height : function (target) {\n      var lis = target.parent().children(),\n          self = this;\n\n      lis.each(function () {\n          var li = $(this),\n              image = li.find('img');\n\n          if (li.height() > self.outerHeight(image)) {\n            li.addClass('fix-height');\n          }\n        })\n        .closest('ul')\n        .width(lis.length * 100 + '%');\n\n      return this;\n    },\n\n    update_paddles : function (target) {\n      var visible_image = target\n        .closest('.carousel')\n        .siblings('.visible-img');\n\n      if (target.next().length > 0) {\n        visible_image\n          .find('.clearing-main-next')\n          .removeClass('disabled');\n      } else {\n        visible_image\n          .find('.clearing-main-next')\n          .addClass('disabled');\n      }\n\n      if (target.prev().length > 0) {\n        visible_image\n          .find('.clearing-main-prev')\n          .removeClass('disabled');\n      } else {\n        visible_image\n          .find('.clearing-main-prev')\n          .addClass('disabled');\n      }\n    },\n\n    center : function (target) {\n      if (!this.rtl) {\n        target.css({\n          marginLeft : -(this.outerWidth(target) / 2),\n          marginTop : -(this.outerHeight(target) / 2)\n        });\n      } else {\n        target.css({\n          marginRight : -(this.outerWidth(target) / 2),\n          marginTop : -(this.outerHeight(target) / 2)\n        });\n      }\n      return this;\n    },\n\n    // image loading and preloading\n\n    load : function ($image) {\n      if ($image[0].nodeName === \"A\") {\n        var href = $image.attr('href');\n      } else {\n        var href = $image.parent().attr('href');\n      }\n\n      this.preload($image);\n\n      if (href) return href;\n      return $image.attr('src');\n    },\n\n    preload : function ($image) {\n      this\n        .img($image.closest('li').next())\n        .img($image.closest('li').prev());\n    },\n\n    loaded : function (image, callback) {\n      // based on jquery.imageready.js\n      // @weblinc, @jsantell, (c) 2012\n\n      function loaded () {\n        callback();\n      }\n\n      function bindLoad () {\n        this.one('load', loaded);\n\n        if (/MSIE (\\d+\\.\\d+);/.test(navigator.userAgent)) {\n          var src = this.attr( 'src' ),\n              param = src.match( /\\?/ ) ? '&' : '?';\n\n          param += 'random=' + (new Date()).getTime();\n          this.attr('src', src + param);\n        }\n      }\n\n      if (!image.attr('src')) {\n        loaded();\n        return;\n      }\n\n      if (image[0].complete || image[0].readyState === 4) {\n        loaded();\n      } else {\n        bindLoad.call(image);\n      }\n    },\n\n    img : function (img) {\n      if (img.length) {\n        var new_img = new Image(),\n            new_a = img.find('a');\n\n        if (new_a.length) {\n          new_img.src = new_a.attr('href');\n        } else {\n          new_img.src = img.find('img').attr('src');\n        }\n      }\n      return this;\n    },\n\n    // image caption\n\n    caption : function (container, $image) {\n      var caption = $image.data('caption');\n\n      if (caption) {\n        container\n          .html(caption)\n          .show();\n      } else {\n        container\n          .text('')\n          .hide();\n      }\n      return this;\n    },\n\n    // directional methods\n\n    go : function ($ul, direction) {\n      var current = $ul.find('.visible'),\n          target = current[direction]();\n\n      if (target.length) {\n        target\n          .find('img')\n          .trigger('click', [current, target]);\n      }\n    },\n\n    shift : function (current, target, callback) {\n      var clearing = target.parent(),\n          old_index = this.settings.prev_index || target.index(),\n          direction = this.direction(clearing, current, target),\n          left = parseInt(clearing.css('left'), 10),\n          width = this.outerWidth(target),\n          skip_shift;\n\n      // we use jQuery animate instead of CSS transitions because we\n      // need a callback to unlock the next animation\n      if (target.index() !== old_index && !/skip/.test(direction)){\n        if (/left/.test(direction)) {\n          this.lock();\n          clearing.animate({left : left + width}, 300, this.unlock());\n        } else if (/right/.test(direction)) {\n          this.lock();\n          clearing.animate({left : left - width}, 300, this.unlock());\n        }\n      } else if (/skip/.test(direction)) {\n        // the target image is not adjacent to the current image, so\n        // do we scroll right or not\n        skip_shift = target.index() - this.settings.up_count;\n        this.lock();\n\n        if (skip_shift > 0) {\n          clearing.animate({left : -(skip_shift * width)}, 300, this.unlock());\n        } else {\n          clearing.animate({left : 0}, 300, this.unlock());\n        }\n      }\n\n      callback();\n    },\n\n    direction : function ($el, current, target) {\n      var lis = $el.find('li'),\n          li_width = this.outerWidth(lis) + (this.outerWidth(lis) / 4),\n          up_count = Math.floor(this.outerWidth($('.clearing-container')) / li_width) - 1,\n          target_index = lis.index(target),\n          response;\n\n      this.settings.up_count = up_count;\n\n      if (this.adjacent(this.settings.prev_index, target_index)) {\n        if ((target_index > up_count)\n          && target_index > this.settings.prev_index) {\n          response = 'right';\n        } else if ((target_index > up_count - 1)\n          && target_index <= this.settings.prev_index) {\n          response = 'left';\n        } else {\n          response = false;\n        }\n      } else {\n        response = 'skip';\n      }\n\n      this.settings.prev_index = target_index;\n\n      return response;\n    },\n\n    adjacent : function (current_index, target_index) {\n      for (var i = target_index + 1; i >= target_index - 1; i--) {\n        if (i === current_index) return true;\n      }\n      return false;\n    },\n\n    // lock management\n\n    lock : function () {\n      this.settings.locked = true;\n    },\n\n    unlock : function () {\n      this.settings.locked = false;\n    },\n\n    locked : function () {\n      return this.settings.locked;\n    },\n\n    // plugin management/browser quirks\n\n    outerHTML : function (el) {\n      // support FireFox < 11\n      return el.outerHTML || new XMLSerializer().serializeToString(el);\n    },\n\n    off : function () {\n      $(this.scope).off('.fndtn.clearing');\n      $(window).off('.fndtn.clearing');\n      this.remove_data(); // empty settings cache\n      this.settings.init = false;\n    },\n\n    reflow : function () {\n      this.init();\n    }\n  };\n\n}(Foundation.zj, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.cookie.js":"/*!\n * jQuery Cookie Plugin v1.3\n * https://github.com/carhartl/jquery-cookie\n *\n * Copyright 2011, Klaus Hartl\n * Dual licensed under the MIT or GPL Version 2 licenses.\n * http://www.opensource.org/licenses/mit-license.php\n * http://www.opensource.org/licenses/GPL-2.0\n *\n * Modified to work with Zepto.js by ZURB\n */\n(function ($, document, undefined) {\n\n  var pluses = /\\+/g;\n\n  function raw(s) {\n    return s;\n  }\n\n  function decoded(s) {\n    return decodeURIComponent(s.replace(pluses, ' '));\n  }\n\n  var config = $.cookie = function (key, value, options) {\n\n    // write\n    if (value !== undefined) {\n      options = $.extend({}, config.defaults, options);\n\n      if (value === null) {\n        options.expires = -1;\n      }\n\n      if (typeof options.expires === 'number') {\n        var days = options.expires, t = options.expires = new Date();\n        t.setDate(t.getDate() + days);\n      }\n\n      value = config.json ? JSON.stringify(value) : String(value);\n\n      return (document.cookie = [\n        encodeURIComponent(key), '=', config.raw ? value : encodeURIComponent(value),\n        options.expires ? '; expires=' + options.expires.toUTCString() : '', // use expires attribute, max-age is not supported by IE\n        options.path    ? '; path=' + options.path : '',\n        options.domain  ? '; domain=' + options.domain : '',\n        options.secure  ? '; secure' : ''\n      ].join(''));\n    }\n\n    // read\n    var decode = config.raw ? raw : decoded;\n    var cookies = document.cookie.split('; ');\n    for (var i = 0, l = cookies.length; i < l; i++) {\n      var parts = cookies[i].split('=');\n      if (decode(parts.shift()) === key) {\n        var cookie = decode(parts.join('='));\n        return config.json ? JSON.parse(cookie) : cookie;\n      }\n    }\n\n    return null;\n  };\n\n  config.defaults = {};\n\n  $.removeCookie = function (key, options) {\n    if ($.cookie(key) !== null) {\n      $.cookie(key, null, options);\n      return true;\n    }\n    return false;\n  };\n\n})(Foundation.zj, document);","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.dropdown.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.dropdown = {\n    name : 'dropdown',\n\n    version : '4.2.0',\n\n    settings : {\n      activeClass: 'open',\n      is_hover: false,\n      opened: function(){},\n      closed: function(){}\n    },\n\n    init : function (scope, method, options) {\n      this.scope = scope || this.scope;\n      Foundation.inherit(this, 'throttle scrollLeft data_options');\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, method);\n      }\n\n      if (typeof method != 'string') {\n\n        if (!this.settings.init) {\n          this.events();\n        }\n\n        return this.settings.init;\n      } else {\n        return this[method].call(this, options);\n      }\n    },\n\n    events : function () {\n      var self = this;\n\n      $(this.scope)\n        .on('click.fndtn.dropdown', '[data-dropdown]', function (e) {\n          var settings = $.extend({}, self.settings, self.data_options($(this)));\n          e.preventDefault();\n\n          if (!settings.is_hover) self.toggle($(this));\n        })\n        .on('mouseenter', '[data-dropdown]', function (e) {\n          var settings = $.extend({}, self.settings, self.data_options($(this)));\n          if (settings.is_hover) self.toggle($(this));\n        })\n        .on('mouseleave', '[data-dropdown-content]', function (e) {\n          var target = $('[data-dropdown=\"' + $(this).attr('id') + '\"]'),\n              settings = $.extend({}, self.settings, self.data_options(target));\n          if (settings.is_hover) self.close.call(self, $(this));\n        })\n        .on('opened.fndtn.dropdown', '[data-dropdown-content]', this.settings.opened)\n        .on('closed.fndtn.dropdown', '[data-dropdown-content]', this.settings.closed);\n\n      $('body').on('click.fndtn.dropdown', function (e) {\n        var parent = $(e.target).closest('[data-dropdown-content]');\n\n        if ($(e.target).data('dropdown')) {\n          return;\n        }\n        if (parent.length > 0 && ($(e.target).is('[data-dropdown-content]') || $.contains(parent.first()[0], e.target))) {\n          e.stopPropagation();\n          return;\n        }\n\n        self.close.call(self, $('[data-dropdown-content]'));\n      });\n\n      $(window).on('resize.fndtn.dropdown', self.throttle(function () {\n        self.resize.call(self);\n      }, 50)).trigger('resize');\n\n      this.settings.init = true;\n    },\n\n    close: function (dropdown) {\n      var self = this;\n      dropdown.each(function () {\n        if ($(this).hasClass(self.settings.activeClass)) {\n          $(this)\n            .css(Foundation.rtl ? 'right':'left', '-99999px')\n            .removeClass(self.settings.activeClass);\n          $(this).trigger('closed');\n        }\n      });\n    },\n\n    open: function (dropdown, target) {\n        this\n          .css(dropdown\n            .addClass(this.settings.activeClass), target);\n        dropdown.trigger('opened');\n    },\n\n    toggle : function (target) {\n      var dropdown = $('#' + target.data('dropdown'));\n\n      this.close.call(this, $('[data-dropdown-content]').not(dropdown));\n\n      if (dropdown.hasClass(this.settings.activeClass)) {\n        this.close.call(this, dropdown);\n      } else {\n        this.close.call(this, $('[data-dropdown-content]'))\n        this.open.call(this, dropdown, target);\n      }\n    },\n\n    resize : function () {\n      var dropdown = $('[data-dropdown-content].open'),\n          target = $(\"[data-dropdown='\" + dropdown.attr('id') + \"']\");\n\n      if (dropdown.length && target.length) {\n        this.css(dropdown, target);\n      }\n    },\n\n    css : function (dropdown, target) {\n      var offset_parent = dropdown.offsetParent();\n      // temporary workaround until 4.2\n      if (offset_parent.length > 0 && /body/i.test(dropdown.offsetParent()[0].nodeName)) {\n        var position = target.offset();\n        position.top -= dropdown.offsetParent().offset().top;\n        position.left -= dropdown.offsetParent().offset().left;\n      } else {\n        var position = target.position();\n      }\n\n      if (this.small()) {\n        dropdown.css({\n          position : 'absolute',\n          width: '95%',\n          left: '2.5%',\n          'max-width': 'none',\n          top: position.top + this.outerHeight(target)\n        });\n      } else {\n        if (!Foundation.rtl && $(window).width() > this.outerWidth(dropdown) + target.offset().left) {\n          var left = position.left;\n          if (dropdown.hasClass('right')) {\n            dropdown.removeClass('right');\n          }\n        } else {\n          if (!dropdown.hasClass('right')) {\n            dropdown.addClass('right');\n          }\n          var left = position.left - (this.outerWidth(dropdown) - this.outerWidth(target));\n        }\n\n        dropdown.attr('style', '').css({\n          position : 'absolute',\n          top: position.top + this.outerHeight(target),\n          left: left\n        });\n      }\n\n      return dropdown;\n    },\n\n    small : function () {\n      return $(window).width() < 768 || $('html').hasClass('lt-ie9');\n    },\n\n    off: function () {\n      $(this.scope).off('.fndtn.dropdown');\n      $('html, body').off('.fndtn.dropdown');\n      $(window).off('.fndtn.dropdown');\n      $('[data-dropdown-content]').off('.fndtn.dropdown');\n      this.settings.init = false;\n    },\n\n    reflow : function () {}\n  };\n}(Foundation.zj, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.forms.js":"(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.forms = {\n    name: 'forms',\n\n    version: '4.2.1',\n\n    cache: {},\n\n    settings: {\n      disable_class: 'no-custom',\n      last_combo : null\n    },\n\n    init: function (scope, method, options) {\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, method);\n      }\n\n      if (typeof method != 'string') {\n        if (!this.settings.init) {\n          this.events();\n        }\n\n        this.assemble();\n\n        return this.settings.init;\n      } else {\n        return this[method].call(this, options);\n      }\n    },\n\n    assemble: function () {\n      $('form.custom select', $(this.scope))\n        .not('[data-customforms=\"disabled\"]')\n        .not('[multiple=multiple]')\n        .each(this.append_custom_select);\n    },\n\n    events: function () {\n      var self = this;\n\n      $(this.scope)\n        .on('change.fndtn.forms', 'form.custom select:not([data-customforms=\"disabled\"])', function (e, force_refresh) {\n          self.refresh_custom_select($(this), force_refresh);\n        })\n        .on('click.fndtn.forms', 'form.custom div.custom.dropdown a.current, form.custom div.custom.dropdown a.selector', function (e) {\n          var $this = $(this),\n              $dropdown = $this.closest('div.custom.dropdown'),\n              $select = getFirstPrevSibling($dropdown, 'select');\n\n          // make sure other dropdowns close\n          if (!$dropdown.hasClass('open')) $(self.scope).trigger('click');\n\n          e.preventDefault();\n          if (false === $select.is(':disabled')) {\n            $dropdown.toggleClass('open');\n\n            if ($dropdown.hasClass('open')) {\n              $(self.scope).on('click.fndtn.forms.customdropdown', function () {\n                $dropdown.removeClass('open');\n                $(self.scope).off('.fndtn.forms.customdropdown');\n              });\n            } else {\n              $(self.scope).on('.fndtn.forms.customdropdown');\n            }\n            return false;\n          }\n        })\n        .on('click.fndtn.forms touchend.fndtn.forms', 'form.custom div.custom.dropdown li', function (e) {\n          var $this = $(this),\n              $customDropdown = $this.closest('div.custom.dropdown'),\n              $select = getFirstPrevSibling($customDropdown, 'select'),\n              selectedIndex = 0;\n\n          e.preventDefault();\n          e.stopPropagation();\n\n          if (!$(this).hasClass('disabled')) {\n            $('div.dropdown').not($customDropdown).removeClass('open');\n\n            var $oldThis = $this.closest('ul')\n              .find('li.selected');\n            $oldThis.removeClass('selected');\n\n            $this.addClass('selected');\n\n            $customDropdown.removeClass('open')\n              .find('a.current')\n              .text($this.text());\n\n            $this.closest('ul').find('li').each(function (index) {\n              if ($this[0] == this) {\n                selectedIndex = index;\n              }\n            });\n            $select[0].selectedIndex = selectedIndex;\n\n            //store the old value in data\n            $select.data('prevalue', $oldThis.html());\n            $select.trigger('change');\n          }\n      });\n\n      $(window).on('keydown', function (e) {\n        var focus = document.activeElement,\n            self = Foundation.libs.forms,\n            dropdown = $('.custom.dropdown.open');\n\n        if (dropdown.length > 0) {\n          e.preventDefault();\n\n          if (e.which === 13) {\n            dropdown.find('li.selected').trigger('click');\n          }\n\n          if (e.which === 27) {\n            dropdown.removeClass('open');\n          }\n\n          if (e.which >= 65 && e.which <= 90) {\n            var next = self.go_to(dropdown, e.which),\n                current = dropdown.find('li.selected');\n\n            if (next) {\n              current.removeClass('selected');\n              self.scrollTo(next.addClass('selected'), 300);\n            }\n          }\n\n          if (e.which === 38) {\n            var current = dropdown.find('li.selected'),\n                prev = current.prev(':not(.disabled)');\n\n            if (prev.length > 0) {\n              prev.parent()[0].scrollTop = prev.parent().scrollTop() - self.outerHeight(prev);\n              current.removeClass('selected');\n              prev.addClass('selected');\n            }\n          } else if (e.which === 40) {\n            var current = dropdown.find('li.selected'),\n                next = current.next(':not(.disabled)');\n\n            if (next.length > 0) {\n              next.parent()[0].scrollTop = next.parent().scrollTop() + self.outerHeight(next);\n              current.removeClass('selected');\n              next.addClass('selected');\n            }\n          }\n        }\n      });\n\n      this.settings.init = true;\n    },\n\n    go_to: function (dropdown, character) {\n      var lis = dropdown.find('li'),\n          count = lis.length;\n\n      if (count > 0) {\n        for (var i = 0; i < count; i++) {\n          var first_letter = lis.eq(i).text().charAt(0).toLowerCase();\n          if (first_letter === String.fromCharCode(character).toLowerCase()) return lis.eq(i);\n        }\n      }\n    },\n\n    scrollTo: function (el, duration) {\n      if (duration < 0) return;\n      var parent = el.parent();\n      var li_height = this.outerHeight(el);\n      var difference = (li_height * (el.index())) - parent.scrollTop();\n      var perTick = difference / duration * 10;\n\n      this.scrollToTimerCache = setTimeout(function () {\n        if (!isNaN(parseInt(perTick, 10))) {\n          parent[0].scrollTop = parent.scrollTop() + perTick;\n          this.scrollTo(el, duration - 10);\n        }\n      }.bind(this), 10);\n    },\n\n    append_custom_select: function (idx, sel) {\n        var self = Foundation.libs.forms,\n            $this = $(sel),\n            $customSelect = $this.next('div.custom.dropdown'),\n            $customList = $customSelect.find('ul'),\n            $selectCurrent = $customSelect.find(\".current\"),\n            $selector = $customSelect.find(\".selector\"),\n            $options = $this.find('option'),\n            $selectedOption = $options.filter(':selected'),\n            copyClasses = $this.attr('class') ? $this.attr('class').split(' ') : [],\n            maxWidth = 0,\n            liHtml = '',\n            $listItems,\n            $currentSelect = false;\n\n        if ($this.hasClass(self.settings.disable_class)) return;\n\n        if ($customSelect.length === 0) {\n          var customSelectSize = $this.hasClass('small') ? 'small' : $this.hasClass('medium') ? 'medium' : $this.hasClass('large') ? 'large' : $this.hasClass('expand') ? 'expand' : '';\n\n          $customSelect = $('<div class=\"' + ['custom', 'dropdown', customSelectSize].concat(copyClasses).filter(function (item, idx, arr) {\n            if (item == '') return false;\n            return arr.indexOf(item) == idx;\n          }).join(' ') + '\"><a href=\"#\" class=\"selector\"></a><ul /></div>');\n\n          $selector = $customSelect.find(\".selector\");\n          $customList = $customSelect.find(\"ul\");\n\n          liHtml = $options.map(function () {\n            var copyClasses = $(this).attr('class') ? $(this).attr('class') : '';\n            return \"<li class='\" + copyClasses + \"'>\" + $(this).html() + \"</li>\";\n          }).get().join('');\n\n          $customList.append(liHtml);\n\n          $currentSelect = $customSelect\n            .prepend('<a href=\"#\" class=\"current\">' + $selectedOption.html() + '</a>')\n            .find(\".current\");\n\n          $this.after($customSelect)\n            .addClass('hidden-field');\n        } else {\n          liHtml = $options.map(function () {\n              return \"<li>\" + $(this).html() + \"</li>\";\n            })\n            .get().join('');\n\n          $customList.html('')\n            .append(liHtml);\n\n        } // endif $customSelect.length === 0\n\n        self.assign_id($this, $customSelect);\n        $customSelect.toggleClass('disabled', $this.is(':disabled'));\n        $listItems = $customList.find('li');\n\n        // cache list length\n        self.cache[$customSelect.data('id')] = $listItems.length;\n\n        $options.each(function (index) {\n          if (this.selected) {\n            $listItems.eq(index).addClass('selected');\n\n            if ($currentSelect) {\n              $currentSelect.html($(this).html());\n            }\n          }\n          if ($(this).is(':disabled')) {\n            $listItems.eq(index).addClass('disabled');\n          }\n        });\n\n        //\n        // If we're not specifying a predetermined form size.\n        //\n        if (!$customSelect.is('.small, .medium, .large, .expand')) {\n\n          // ------------------------------------------------------------------------------------\n          // This is a work-around for when elements are contained within hidden parents.\n          // For example, when custom-form elements are inside of a hidden reveal modal.\n          //\n          // We need to display the current custom list element as well as hidden parent elements\n          // in order to properly calculate the list item element's width property.\n          // -------------------------------------------------------------------------------------\n\n          $customSelect.addClass('open');\n          //\n          // Quickly, display all parent elements.\n          // This should help us calcualate the width of the list item's within the drop down.\n          //\n          var self = Foundation.libs.forms;\n          self.hidden_fix.adjust($customList);\n\n          maxWidth = (self.outerWidth($listItems) > maxWidth) ? self.outerWidth($listItems) : maxWidth;\n\n          Foundation.libs.forms.hidden_fix.reset();\n\n          $customSelect.removeClass('open');\n\n        } // endif\n\n    },\n\n    assign_id: function ($select, $customSelect) {\n      var id = [+new Date(), Foundation.random_str(5)].join('-');\n      $select.attr('data-id', id);\n      $customSelect.attr('data-id', id);\n    },\n\n    refresh_custom_select: function ($select, force_refresh) {\n      var self = this;\n      var maxWidth = 0,\n          $customSelect = $select.next(),\n          $options = $select.find('option'),\n          $listItems = $customSelect.find('li');\n\n      if ($listItems.length != this.cache[$customSelect.data('id')] || force_refresh) {\n        $customSelect.find('ul').html('');\n\n        $options.each(function () {\n          var $li = $('<li>' + $(this).html() + '</li>');\n          $customSelect.find('ul').append($li);\n        });\n\n        // re-populate\n        $options.each(function (index) {\n          if (this.selected) {\n            $customSelect.find('li').eq(index).addClass('selected');\n            $customSelect.find('.current').html($(this).html());\n          }\n          if ($(this).is(':disabled')) {\n            $customSelect.find('li').eq(index).addClass('disabled');\n          }\n        });\n\n        // fix width\n        $customSelect.removeAttr('style')\n          .find('ul').removeAttr('style');\n        $customSelect.find('li').each(function () {\n          $customSelect.addClass('open');\n          if (self.outerWidth($(this)) > maxWidth) {\n            maxWidth = self.outerWidth($(this));\n          }\n          $customSelect.removeClass('open');\n        });\n\n        $listItems = $customSelect.find('li');\n        // cache list length\n        this.cache[$customSelect.data('id')] = $listItems.length;\n      }\n    },\n\n    escape: function (text) {\n      return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n    },\n\n    hidden_fix: {\n        /**\n         * Sets all hidden parent elements and self to visibile.\n         *\n         * @method adjust\n         * @param {jQuery Object} $child\n         */\n\n        // We'll use this to temporarily store style properties.\n        tmp: [],\n\n        // We'll use this to set hidden parent elements.\n        hidden: null,\n\n        adjust: function ($child) {\n          // Internal reference.\n          var _self = this;\n\n          // Set all hidden parent elements, including this element.\n          _self.hidden = $child.parents();\n          _self.hidden = _self.hidden.add($child).filter(\":hidden\");\n\n          // Loop through all hidden elements.\n          _self.hidden.each(function () {\n\n            // Cache the element.\n            var $elem = $(this);\n\n            // Store the style attribute.\n            // Undefined if element doesn't have a style attribute.\n            _self.tmp.push($elem.attr('style'));\n\n            // Set the element's display property to block,\n            // but ensure it's visibility is hidden.\n            $elem.css({\n                'visibility': 'hidden',\n                'display': 'block'\n            });\n          });\n\n        }, // end adjust\n\n        /**\n         * Resets the elements previous state.\n         *\n         * @method reset\n         */\n        reset: function () {\n          // Internal reference.\n          var _self = this;\n          // Loop through our hidden element collection.\n          _self.hidden.each(function (i) {\n            // Cache this element.\n            var $elem = $(this),\n                _tmp = _self.tmp[i]; // Get the stored 'style' value for this element.\n\n            // If the stored value is undefined.\n            if (_tmp === undefined)\n            // Remove the style attribute.\n            $elem.removeAttr('style');\n            else\n            // Otherwise, reset the element style attribute.\n            $elem.attr('style', _tmp);\n          });\n          // Reset the tmp array.\n          _self.tmp = [];\n          // Reset the hidden elements variable.\n          _self.hidden = null;\n\n        } // end reset\n    },\n\n    off: function () {\n      $(this.scope).off('.fndtn.forms');\n    },\n\n    reflow : function () {}\n  };\n\n  var getFirstPrevSibling = function($el, selector) {\n    var $el = $el.prev();\n    while ($el.length) {\n      if ($el.is(selector)) return $el;\n      $el = $el.prev();\n    }\n    return $();\n  };\n}(Foundation.zj, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.interchange.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.interchange = {\n    name : 'interchange',\n\n    version : '4.2.1',\n\n    cache : {},\n\n    settings : {\n      load_attr : 'interchange',\n\n      named_queries : {\n        'default' : 'only screen and (min-width: 1px)',\n        small : 'only screen and (min-width: 768px)',\n        medium : 'only screen and (min-width: 1280px)',\n        large : 'only screen and (min-width: 1440px)',\n        landscape : 'only screen and (orientation: landscape)',\n        portrait : 'only screen and (orientation: portrait)',\n        retina : 'only screen and (-webkit-min-device-pixel-ratio: 2),'\n          + 'only screen and (min--moz-device-pixel-ratio: 2),'\n          + 'only screen and (-o-min-device-pixel-ratio: 2/1),'\n          + 'only screen and (min-device-pixel-ratio: 2),'\n          + 'only screen and (min-resolution: 192dpi),'\n          + 'only screen and (min-resolution: 2dppx)'\n      },\n\n      directives : {\n        replace : function (el, path) {\n          if (/IMG/.test(el[0].nodeName)) {\n            var path_parts = path.split('/'),\n                path_file = path_parts[path_parts.length - 1],\n                orig_path = el[0].src;\n\n            if (new RegExp(path_file, 'i').test(el[0].src)) return;\n\n            el[0].src = path;\n\n            return el.trigger('replace', [el[0].src, orig_path]);\n          }\n        }\n      }\n    },\n\n    init : function (scope, method, options) {\n      Foundation.inherit(this, 'throttle');\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, method);\n      }\n\n      this.events();\n      this.images();\n\n      if (typeof method != 'string') {\n        return this.settings.init;\n      } else {\n        return this[method].call(this, options);\n      }\n    },\n\n    events : function () {\n      var self = this;\n\n      $(window).on('resize.fndtn.interchange', self.throttle(function () {\n        self.resize.call(self);\n      }, 50));\n    },\n\n    resize : function () {\n      var cache = this.cache;\n\n      for (var uuid in cache) {\n        if (cache.hasOwnProperty(uuid)) {\n          var passed = this.results(uuid, cache[uuid]);\n\n          if (passed) {\n            this.settings.directives[passed\n              .scenario[1]](passed.el, passed.scenario[0]);\n          }\n        }\n      }\n\n    },\n\n    results : function (uuid, scenarios) {\n      var count = scenarios.length,\n          results_arr = [];\n\n      if (count > 0) {\n        var el = $('[data-uuid=\"' + uuid + '\"]');\n\n        for (var i = count - 1; i >= 0; i--) {\n          var rule = scenarios[i][2];\n          if (this.settings.named_queries.hasOwnProperty(rule)) {\n            var mq = matchMedia(this.settings.named_queries[rule]);\n          } else {\n            var mq = matchMedia(scenarios[i][2]);\n          }\n          if (mq.matches) {\n            return {el: el, scenario: scenarios[i]};\n          }\n        }\n      }\n\n      return false;\n    },\n\n    images : function (force_update) {\n      if (typeof this.cached_images === 'undefined' || force_update) {\n        return this.update_images();\n      }\n\n      return this.cached_images;\n    },\n\n    update_images : function () {\n      var images = document.getElementsByTagName('img'),\n          count = images.length,\n          data_attr = 'data-' + this.settings.load_attr;\n\n      this.cached_images = [];\n\n      for (var i = count - 1; i >= 0; i--) {\n        this.loaded($(images[i]), (i === 0), function (image, last) {\n          if (image) {\n            var str = image.getAttribute(data_attr) || '';\n\n            if (str.length > 0) {\n              this.cached_images.push(image);\n            }\n          }\n\n          if (last) this.enhance();\n\n        }.bind(this));\n      }\n\n      return 'deferred';\n    },\n\n    // based on jquery.imageready.js\n    // @weblinc, @jsantell, (c) 2012\n\n    loaded : function (image, last, callback) {\n      function loaded () {\n        callback(image[0], last);\n      }\n\n      function bindLoad () {\n        this.one('load', loaded);\n\n        if (/MSIE (\\d+\\.\\d+);/.test(navigator.userAgent)) {\n          var src = this.attr( 'src' ),\n              param = src.match( /\\?/ ) ? '&' : '?';\n\n          param += 'random=' + (new Date()).getTime();\n          this.attr('src', src + param);\n        }\n      }\n\n      if (!image.attr('src')) {\n        loaded();\n        return;\n      }\n\n      if (image[0].complete || image[0].readyState === 4) {\n        loaded();\n      } else {\n        bindLoad.call(image);\n      }\n    },\n\n    enhance : function () {\n      var count = this.images().length;\n\n      for (var i = count - 1; i >= 0; i--) {\n        this._object($(this.images()[i]));\n      }\n\n      return $(window).trigger('resize');\n    },\n\n    parse_params : function (path, directive, mq) {\n      return [this.trim(path), this.convert_directive(directive), this.trim(mq)];\n    },\n\n    convert_directive : function (directive) {\n      var trimmed = this.trim(directive);\n\n      if (trimmed.length > 0) {\n        return trimmed;\n      }\n\n      return 'replace';\n    },\n\n    _object : function(el) {\n      var raw_arr = this.parse_data_attr(el),\n          scenarios = [], count = raw_arr.length;\n\n      if (count > 0) {\n        for (var i = count - 1; i >= 0; i--) {\n          var split = raw_arr[i].split(/\\((.*?)(\\))$/);\n\n          if (split.length > 1) {\n            var cached_split = split[0].split(','),\n                params = this.parse_params(cached_split[0],\n                  cached_split[1], split[1]);\n\n            scenarios.push(params);\n          }\n        }\n      }\n\n      return this.store(el, scenarios);\n    },\n\n    uuid : function (separator) {\n      var delim = separator || \"-\";\n\n      function S4() {\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n      }\n\n      return (S4() + S4() + delim + S4() + delim + S4()\n        + delim + S4() + delim + S4() + S4() + S4());\n    },\n\n    store : function (el, scenarios) {\n      var uuid = this.uuid(),\n          current_uuid = el.data('uuid');\n\n      if (current_uuid) return this.cache[current_uuid];\n\n      el.attr('data-uuid', uuid);\n\n      return this.cache[uuid] = scenarios;\n    },\n\n    trim : function(str) {\n      if (typeof str === 'string') {\n        return $.trim(str);\n      }\n\n      return str;\n    },\n\n    parse_data_attr : function (el) {\n      var raw = el.data(this.settings.load_attr).split(/\\[(.*?)\\]/),\n          count = raw.length, output = [];\n\n      for (var i = count - 1; i >= 0; i--) {\n        if (raw[i].replace(/[\\W\\d]+/, '').length > 4) {\n          output.push(raw[i]);\n        }\n      }\n\n      return output;\n    },\n\n    reflow : function () {\n      this.images(true);\n    }\n\n  };\n\n}(Foundation.zj, this, this.document));","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.joyride.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.joyride = {\n    name: 'joyride',\n\n    version : '4.2.0',\n\n    defaults : {\n      expose               : false,      // turn on or off the expose feature\n      modal                : false,      // Whether to cover page with modal during the tour\n      tipLocation          : 'bottom',  // 'top' or 'bottom' in relation to parent\n      nubPosition          : 'auto',    // override on a per tooltip bases\n      scrollSpeed          : 300,       // Page scrolling speed in milliseconds, 0 = no scroll animation\n      timer                : 0,         // 0 = no timer , all other numbers = timer in milliseconds\n      startTimerOnClick    : true,      // true or false - true requires clicking the first button start the timer\n      startOffset          : 0,         // the index of the tooltip you want to start on (index of the li)\n      nextButton           : true,      // true or false to control whether a next button is used\n      tipAnimation         : 'fade',    // 'pop' or 'fade' in each tip\n      pauseAfter           : [],        // array of indexes where to pause the tour after\n      exposed              : [],        // array of expose elements\n      tipAnimationFadeSpeed: 300,       // when tipAnimation = 'fade' this is speed in milliseconds for the transition\n      cookieMonster        : false,     // true or false to control whether cookies are used\n      cookieName           : 'joyride', // Name the cookie you'll use\n      cookieDomain         : false,     // Will this cookie be attached to a domain, ie. '.notableapp.com'\n      cookieExpires        : 365,       // set when you would like the cookie to expire.\n      tipContainer         : 'body',    // Where will the tip be attached\n      postRideCallback     : function (){},    // A method to call once the tour closes (canceled or complete)\n      postStepCallback     : function (){},    // A method to call after each step\n      preStepCallback      : function (){},    // A method to call before each step\n      preRideCallback      : function (){},    // A method to call before the tour starts (passed index, tip, and cloned exposed element)\n      postExposeCallback   : function (){},    // A method to call after an element has been exposed\n      template : { // HTML segments for tip layout\n        link    : '<a href=\"#close\" class=\"joyride-close-tip\">&times;</a>',\n        timer   : '<div class=\"joyride-timer-indicator-wrap\"><span class=\"joyride-timer-indicator\"></span></div>',\n        tip     : '<div class=\"joyride-tip-guide\"><span class=\"joyride-nub\"></span></div>',\n        wrapper : '<div class=\"joyride-content-wrapper\"></div>',\n        button  : '<a href=\"#\" class=\"small button joyride-next-tip\"></a>',\n        modal   : '<div class=\"joyride-modal-bg\"></div>',\n        expose  : '<div class=\"joyride-expose-wrapper\"></div>',\n        exposeCover: '<div class=\"joyride-expose-cover\"></div>'\n      },\n      exposeAddClass  \t: ''\t\t// One or more space-separated class names to be added to exposed element\n    },\n\n    settings : {},\n\n    init : function (scope, method, options) {\n      this.scope = scope || this.scope;\n      Foundation.inherit(this, 'throttle data_options scrollTo scrollLeft delay');\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, this.defaults, method);\n      } else {\n        $.extend(true, this.settings, this.defaults, options);\n      }\n\n      if (typeof method != 'string') {\n        if (!this.settings.init) this.events();\n\n        return this.settings.init;\n      } else {\n        return this[method].call(this, options);\n      }\n    },\n\n    events : function () {\n      var self = this;\n\n      $(this.scope)\n        .on('click.joyride', '.joyride-next-tip, .joyride-modal-bg', function (e) {\n          e.preventDefault();\n\n          if (this.settings.$li.next().length < 1) {\n            this.end();\n          } else if (this.settings.timer > 0) {\n            clearTimeout(this.settings.automate);\n            this.hide();\n            this.show();\n            this.startTimer();\n          } else {\n            this.hide();\n            this.show();\n          }\n\n        }.bind(this))\n\n        .on('click.joyride', '.joyride-close-tip', function (e) {\n          e.preventDefault();\n          this.end();\n        }.bind(this));\n\n      $(window).on('resize.fndtn.joyride', self.throttle(function () {\n        if ($('[data-joyride]').length > 0 && self.settings.$next_tip) {\n          if (self.settings.exposed.length > 0) {\n            var $els = $(self.settings.exposed);\n\n            $els.each(function () {\n              var $this = $(this);\n              self.un_expose($this);\n              self.expose($this);\n            });\n          }\n\n          if (self.is_phone()) {\n            self.pos_phone();\n          } else {\n            self.pos_default(false, true);\n          }\n        }\n      }, 100));\n\n      this.settings.init = true;\n    },\n\n    start : function () {\n      var self = this,\n          $this = $(this.scope).find('[data-joyride]'),\n          integer_settings = ['timer', 'scrollSpeed', 'startOffset', 'tipAnimationFadeSpeed', 'cookieExpires'],\n          int_settings_count = integer_settings.length;\n\n      if (!this.settings.init) this.init();\n\n      // non configureable settings\n      this.settings.$content_el = $this;\n      this.settings.$body = $(this.settings.tipContainer);\n      this.settings.body_offset = $(this.settings.tipContainer).position();\n      this.settings.$tip_content = this.settings.$content_el.find('> li');\n      this.settings.paused = false;\n      this.settings.attempts = 0;\n\n      this.settings.tipLocationPatterns = {\n        top: ['bottom'],\n        bottom: [], // bottom should not need to be repositioned\n        left: ['right', 'top', 'bottom'],\n        right: ['left', 'top', 'bottom']\n      };\n\n      // can we create cookies?\n      if (typeof $.cookie !== 'function') {\n        this.settings.cookieMonster = false;\n      }\n\n      // generate the tips and insert into dom.\n      if (!this.settings.cookieMonster || this.settings.cookieMonster && $.cookie(this.settings.cookieName) === null) {\n        this.settings.$tip_content.each(function (index) {\n          var $this = $(this);\n          $.extend(true, self.settings, self.data_options($this));\n          // Make sure that settings parsed from data_options are integers where necessary\n          for (var i = int_settings_count - 1; i >= 0; i--) {\n            self.settings[integer_settings[i]] = parseInt(self.settings[integer_settings[i]], 10);\n          }\n          self.create({$li : $this, index : index});\n        });\n\n        // show first tip\n        if (!this.settings.startTimerOnClick && this.settings.timer > 0) {\n          this.show('init');\n          this.startTimer();\n        } else {\n          this.show('init');\n        }\n\n      }\n    },\n\n    resume : function () {\n      this.set_li();\n      this.show();\n    },\n\n    tip_template : function (opts) {\n      var $blank, content;\n\n      opts.tip_class = opts.tip_class || '';\n\n      $blank = $(this.settings.template.tip).addClass(opts.tip_class);\n      content = $.trim($(opts.li).html()) +\n        this.button_text(opts.button_text) +\n        this.settings.template.link +\n        this.timer_instance(opts.index);\n\n      $blank.append($(this.settings.template.wrapper));\n      $blank.first().attr('data-index', opts.index);\n      $('.joyride-content-wrapper', $blank).append(content);\n\n      return $blank[0];\n    },\n\n    timer_instance : function (index) {\n      var txt;\n\n      if ((index === 0 && this.settings.startTimerOnClick && this.settings.timer > 0) || this.settings.timer === 0) {\n        txt = '';\n      } else {\n        txt = this.outerHTML($(this.settings.template.timer)[0]);\n      }\n      return txt;\n    },\n\n    button_text : function (txt) {\n      if (this.settings.nextButton) {\n        txt = $.trim(txt) || 'Next';\n        txt = this.outerHTML($(this.settings.template.button).append(txt)[0]);\n      } else {\n        txt = '';\n      }\n      return txt;\n    },\n\n    create : function (opts) {\n      var buttonText = opts.$li.attr('data-button') || opts.$li.attr('data-text'),\n        tipClass = opts.$li.attr('class'),\n        $tip_content = $(this.tip_template({\n          tip_class : tipClass,\n          index : opts.index,\n          button_text : buttonText,\n          li : opts.$li\n        }));\n\n      $(this.settings.tipContainer).append($tip_content);\n    },\n\n    show : function (init) {\n      var $timer = null;\n\n      // are we paused?\n      if (this.settings.$li === undefined\n        || ($.inArray(this.settings.$li.index(), this.settings.pauseAfter) === -1)) {\n\n        // don't go to the next li if the tour was paused\n        if (this.settings.paused) {\n          this.settings.paused = false;\n        } else {\n          this.set_li(init);\n        }\n\n        this.settings.attempts = 0;\n\n        if (this.settings.$li.length && this.settings.$target.length > 0) {\n          if (init) { //run when we first start\n            this.settings.preRideCallback(this.settings.$li.index(), this.settings.$next_tip);\n            if (this.settings.modal) {\n              this.show_modal();\n            }\n          }\n\n          this.settings.preStepCallback(this.settings.$li.index(), this.settings.$next_tip);\n\n          if (this.settings.modal && this.settings.expose) {\n            this.expose();\n          }\n\n          this.settings.tipSettings = $.extend(this.settings, this.data_options(this.settings.$li));\n\n          this.settings.timer = parseInt(this.settings.timer, 10);\n\n          this.settings.tipSettings.tipLocationPattern = this.settings.tipLocationPatterns[this.settings.tipSettings.tipLocation];\n\n          // scroll if not modal\n          if (!/body/i.test(this.settings.$target.selector)) {\n            this.scroll_to();\n          }\n\n          if (this.is_phone()) {\n            this.pos_phone(true);\n          } else {\n            this.pos_default(true);\n          }\n\n          $timer = this.settings.$next_tip.find('.joyride-timer-indicator');\n\n          if (/pop/i.test(this.settings.tipAnimation)) {\n\n            $timer.width(0);\n\n            if (this.settings.timer > 0) {\n\n              this.settings.$next_tip.show();\n\n              this.delay(function () {\n                $timer.animate({\n                  width: $timer.parent().width()\n                }, this.settings.timer, 'linear');\n              }.bind(this), this.settings.tipAnimationFadeSpeed);\n\n            } else {\n              this.settings.$next_tip.show();\n\n            }\n\n\n          } else if (/fade/i.test(this.settings.tipAnimation)) {\n\n            $timer.width(0);\n\n            if (this.settings.timer > 0) {\n\n              this.settings.$next_tip\n                .fadeIn(this.settings.tipAnimationFadeSpeed)\n                .show();\n\n              this.delay(function () {\n                $timer.animate({\n                  width: $timer.parent().width()\n                }, this.settings.timer, 'linear');\n              }.bind(this), this.settings.tipAnimationFadeSpeed);\n\n            } else {\n              this.settings.$next_tip.fadeIn(this.settings.tipAnimationFadeSpeed);\n\n            }\n          }\n\n          this.settings.$current_tip = this.settings.$next_tip;\n\n        // skip non-existant targets\n        } else if (this.settings.$li && this.settings.$target.length < 1) {\n\n          this.show();\n\n        } else {\n\n          this.end();\n\n        }\n      } else {\n\n        this.settings.paused = true;\n\n      }\n\n    },\n\n    is_phone : function () {\n      if (Modernizr) {\n        return Modernizr.mq('only screen and (max-width: 767px)') || $('.lt-ie9').length > 0;\n      }\n\n      return (this.settings.$window.width() < 767);\n    },\n\n    hide : function () {\n      if (this.settings.modal && this.settings.expose) {\n        this.un_expose();\n      }\n\n      if (!this.settings.modal) {\n        $('.joyride-modal-bg').hide();\n      }\n      this.settings.$current_tip.hide();\n      this.settings.postStepCallback(this.settings.$li.index(),\n        this.settings.$current_tip);\n    },\n\n    set_li : function (init) {\n      if (init) {\n        this.settings.$li = this.settings.$tip_content.eq(this.settings.startOffset);\n        this.set_next_tip();\n        this.settings.$current_tip = this.settings.$next_tip;\n      } else {\n        this.settings.$li = this.settings.$li.next();\n        this.set_next_tip();\n      }\n\n      this.set_target();\n    },\n\n    set_next_tip : function () {\n      this.settings.$next_tip = $(\".joyride-tip-guide[data-index='\" + this.settings.$li.index() + \"']\");\n      this.settings.$next_tip.data('closed', '');\n    },\n\n    set_target : function () {\n      var cl = this.settings.$li.attr('data-class'),\n          id = this.settings.$li.attr('data-id'),\n          $sel = function () {\n            if (id) {\n              return $(document.getElementById(id));\n            } else if (cl) {\n              return $('.' + cl).first();\n            } else {\n              return $('body');\n            }\n          };\n\n      this.settings.$target = $sel();\n    },\n\n    scroll_to : function () {\n      var window_half, tipOffset;\n\n      window_half = $(window).height() / 2;\n      tipOffset = Math.ceil(this.settings.$target.offset().top - window_half + this.outerHeight(this.settings.$next_tip));\n      if (tipOffset > 0) {\n        this.scrollTo($('html, body'), tipOffset, this.settings.scrollSpeed);\n      }\n    },\n\n    paused : function () {\n      return ($.inArray((this.settings.$li.index() + 1), this.settings.pauseAfter) === -1);\n    },\n\n    restart : function () {\n      this.hide();\n      this.settings.$li = undefined;\n      this.show('init');\n    },\n\n    pos_default : function (init, resizing) {\n      var half_fold = Math.ceil($(window).height() / 2),\n          tip_position = this.settings.$next_tip.offset(),\n          $nub = this.settings.$next_tip.find('.joyride-nub'),\n          nub_width = Math.ceil(this.outerWidth($nub) / 2),\n          nub_height = Math.ceil(this.outerHeight($nub) / 2),\n          toggle = init || false;\n\n      // tip must not be \"display: none\" to calculate position\n      if (toggle) {\n        this.settings.$next_tip.css('visibility', 'hidden');\n        this.settings.$next_tip.show();\n      }\n\n      if (typeof resizing === 'undefined') {\n        resizing = false;\n      }\n\n      if (!/body/i.test(this.settings.$target.selector)) {\n\n          if (this.bottom()) {\n            var leftOffset = this.settings.$target.offset().left;\n            if (Foundation.rtl) {\n              leftOffset = this.settings.$target.offset().width - this.settings.$next_tip.width() + leftOffset;\n            }\n            this.settings.$next_tip.css({\n              top: (this.settings.$target.offset().top + nub_height + this.outerHeight(this.settings.$target)),\n              left: leftOffset});\n\n            this.nub_position($nub, this.settings.tipSettings.nubPosition, 'top');\n\n          } else if (this.top()) {\n            var leftOffset = this.settings.$target.offset().left;\n            if (Foundation.rtl) {\n              leftOffset = this.settings.$target.offset().width - this.settings.$next_tip.width() + leftOffset;\n            }\n            this.settings.$next_tip.css({\n              top: (this.settings.$target.offset().top - this.outerHeight(this.settings.$next_tip) - nub_height),\n              left: leftOffset});\n\n            this.nub_position($nub, this.settings.tipSettings.nubPosition, 'bottom');\n\n          } else if (this.right()) {\n\n            this.settings.$next_tip.css({\n              top: this.settings.$target.offset().top,\n              left: (this.outerWidth(this.settings.$target) + this.settings.$target.offset().left + nub_width)});\n\n            this.nub_position($nub, this.settings.tipSettings.nubPosition, 'left');\n\n          } else if (this.left()) {\n\n            this.settings.$next_tip.css({\n              top: this.settings.$target.offset().top,\n              left: (this.settings.$target.offset().left - this.outerWidth(this.settings.$next_tip) - nub_width)});\n\n            this.nub_position($nub, this.settings.tipSettings.nubPosition, 'right');\n\n          }\n\n          if (!this.visible(this.corners(this.settings.$next_tip)) && this.settings.attempts < this.settings.tipSettings.tipLocationPattern.length) {\n\n            $nub.removeClass('bottom')\n              .removeClass('top')\n              .removeClass('right')\n              .removeClass('left');\n\n            this.settings.tipSettings.tipLocation = this.settings.tipSettings.tipLocationPattern[this.settings.attempts];\n\n            this.settings.attempts++;\n\n            this.pos_default();\n\n          }\n\n      } else if (this.settings.$li.length) {\n\n        this.pos_modal($nub);\n\n      }\n\n      if (toggle) {\n        this.settings.$next_tip.hide();\n        this.settings.$next_tip.css('visibility', 'visible');\n      }\n\n    },\n\n    pos_phone : function (init) {\n      var tip_height = this.outerHeight(this.settings.$next_tip),\n          tip_offset = this.settings.$next_tip.offset(),\n          target_height = this.outerHeight(this.settings.$target),\n          $nub = $('.joyride-nub', this.settings.$next_tip),\n          nub_height = Math.ceil(this.outerHeight($nub) / 2),\n          toggle = init || false;\n\n      $nub.removeClass('bottom')\n        .removeClass('top')\n        .removeClass('right')\n        .removeClass('left');\n\n      if (toggle) {\n        this.settings.$next_tip.css('visibility', 'hidden');\n        this.settings.$next_tip.show();\n      }\n\n      if (!/body/i.test(this.settings.$target.selector)) {\n\n        if (this.top()) {\n\n            this.settings.$next_tip.offset({top: this.settings.$target.offset().top - tip_height - nub_height});\n            $nub.addClass('bottom');\n\n        } else {\n\n          this.settings.$next_tip.offset({top: this.settings.$target.offset().top + target_height + nub_height});\n          $nub.addClass('top');\n\n        }\n\n      } else if (this.settings.$li.length) {\n        this.pos_modal($nub);\n      }\n\n      if (toggle) {\n        this.settings.$next_tip.hide();\n        this.settings.$next_tip.css('visibility', 'visible');\n      }\n    },\n\n    pos_modal : function ($nub) {\n      this.center();\n      $nub.hide();\n\n      this.show_modal();\n    },\n\n    show_modal : function () {\n      if (!this.settings.$next_tip.data('closed')) {\n        var joyridemodalbg =  $('.joyride-modal-bg');\n        if (joyridemodalbg.length < 1) {\n          $('body').append(this.settings.template.modal).show();\n        }\n\n        if (/pop/i.test(this.settings.tipAnimation)) {\n            joyridemodalbg.show();\n        } else {\n            joyridemodalbg.fadeIn(this.settings.tipAnimationFadeSpeed);\n        }\n      }\n    },\n\n    expose : function () {\n      var expose,\n          exposeCover,\n          el,\n          origCSS,\n          origClasses,\n          randId = 'expose-'+Math.floor(Math.random()*10000);\n\n      if (arguments.length > 0 && arguments[0] instanceof $) {\n        el = arguments[0];\n      } else if(this.settings.$target && !/body/i.test(this.settings.$target.selector)){\n        el = this.settings.$target;\n      }  else {\n        return false;\n      }\n\n      if(el.length < 1){\n        if(window.console){\n          console.error('element not valid', el);\n        }\n        return false;\n      }\n\n      expose = $(this.settings.template.expose);\n      this.settings.$body.append(expose);\n      expose.css({\n        top: el.offset().top,\n        left: el.offset().left,\n        width: this.outerWidth(el, true),\n        height: this.outerHeight(el, true)\n      });\n\n      exposeCover = $(this.settings.template.exposeCover);\n\n      origCSS = {\n        zIndex: el.css('z-index'),\n        position: el.css('position')\n      };\n      \n      origClasses = el.attr('class') == null ? '' : el.attr('class');\n\n      el.css('z-index',parseInt(expose.css('z-index'))+1);\n\n      if (origCSS.position == 'static') {\n        el.css('position','relative');\n      }\n\n      el.data('expose-css',origCSS);\n      el.data('orig-class', origClasses);\n      el.attr('class', origClasses + ' ' + this.settings.exposeAddClass);\n\n      exposeCover.css({\n        top: el.offset().top,\n        left: el.offset().left,\n        width: this.outerWidth(el, true),\n        height: this.outerHeight(el, true)\n      });\n\n      this.settings.$body.append(exposeCover);\n      expose.addClass(randId);\n      exposeCover.addClass(randId);\n      el.data('expose', randId);\n      this.settings.postExposeCallback(this.settings.$li.index(), this.settings.$next_tip, el);\n      this.add_exposed(el);\n    },\n\n    un_expose : function () {\n      var exposeId,\n          el,\n          expose ,\n          origCSS,\n          origClasses,\n          clearAll = false;\n\n      if (arguments.length > 0 && arguments[0] instanceof $) {\n        el = arguments[0];\n      } else if(this.settings.$target && !/body/i.test(this.settings.$target.selector)){\n        el = this.settings.$target;\n      }  else {\n        return false;\n      }\n\n      if(el.length < 1){\n        if (window.console) {\n          console.error('element not valid', el);\n        }\n        return false;\n      }\n\n      exposeId = el.data('expose');\n      expose = $('.' + exposeId);\n\n      if (arguments.length > 1) {\n        clearAll = arguments[1];\n      }\n\n      if (clearAll === true) {\n        $('.joyride-expose-wrapper,.joyride-expose-cover').remove();\n      } else {\n        expose.remove();\n      }\n\n      origCSS = el.data('expose-css');\n\n      if (origCSS.zIndex == 'auto') {\n        el.css('z-index', '');\n      } else {\n        el.css('z-index', origCSS.zIndex);\n      }\n\n      if (origCSS.position != el.css('position')) {\n        if(origCSS.position == 'static') {// this is default, no need to set it.\n          el.css('position', '');\n        } else {\n          el.css('position', origCSS.position);\n        }\n      }\n      \n      origClasses = el.data('orig-class');\n      el.attr('class', origClasses);\n      el.removeData('orig-classes');\n\n      el.removeData('expose');\n      el.removeData('expose-z-index');\n      this.remove_exposed(el);\n    },\n\n    add_exposed: function(el){\n      this.settings.exposed = this.settings.exposed || [];\n      if (el instanceof $ || typeof el === 'object') {\n        this.settings.exposed.push(el[0]);\n      } else if (typeof el == 'string') {\n        this.settings.exposed.push(el);\n      }\n    },\n\n    remove_exposed: function(el){\n      var search, count;\n      if (el instanceof $) {\n        search = el[0]\n      } else if (typeof el == 'string'){\n        search = el;\n      }\n\n      this.settings.exposed = this.settings.exposed || [];\n      count = this.settings.exposed.length;\n\n      for (var i=0; i < count; i++) {\n        if (this.settings.exposed[i] == search) {\n          this.settings.exposed.splice(i, 1);\n          return;\n        }\n      }\n    },\n\n    center : function () {\n      var $w = $(window);\n\n      this.settings.$next_tip.css({\n        top : ((($w.height() - this.outerHeight(this.settings.$next_tip)) / 2) + $w.scrollTop()),\n        left : ((($w.width() - this.outerWidth(this.settings.$next_tip)) / 2) + this.scrollLeft($w))\n      });\n\n      return true;\n    },\n\n    bottom : function () {\n      return /bottom/i.test(this.settings.tipSettings.tipLocation);\n    },\n\n    top : function () {\n      return /top/i.test(this.settings.tipSettings.tipLocation);\n    },\n\n    right : function () {\n      return /right/i.test(this.settings.tipSettings.tipLocation);\n    },\n\n    left : function () {\n      return /left/i.test(this.settings.tipSettings.tipLocation);\n    },\n\n    corners : function (el) {\n      var w = $(window),\n          window_half = w.height() / 2,\n          //using this to calculate since scroll may not have finished yet.\n          tipOffset = Math.ceil(this.settings.$target.offset().top - window_half + this.settings.$next_tip.outerHeight()),\n          right = w.width() + this.scrollLeft(w),\n          offsetBottom =  w.height() + tipOffset,\n          bottom = w.height() + w.scrollTop(),\n          top = w.scrollTop();\n\n      if (tipOffset < top) {\n        if (tipOffset < 0) {\n          top = 0;\n        } else {\n          top = tipOffset;\n        }\n      }\n\n      if (offsetBottom > bottom) {\n        bottom = offsetBottom;\n      }\n\n      return [\n        el.offset().top < top,\n        right < el.offset().left + el.outerWidth(),\n        bottom < el.offset().top + el.outerHeight(),\n        this.scrollLeft(w) > el.offset().left\n      ];\n    },\n\n    visible : function (hidden_corners) {\n      var i = hidden_corners.length;\n\n      while (i--) {\n        if (hidden_corners[i]) return false;\n      }\n\n      return true;\n    },\n\n    nub_position : function (nub, pos, def) {\n      if (pos === 'auto') {\n        nub.addClass(def);\n      } else {\n        nub.addClass(pos);\n      }\n    },\n\n    startTimer : function () {\n      if (this.settings.$li.length) {\n        this.settings.automate = setTimeout(function () {\n          this.hide();\n          this.show();\n          this.startTimer();\n        }.bind(this), this.settings.timer);\n      } else {\n        clearTimeout(this.settings.automate);\n      }\n    },\n\n    end : function () {\n      if (this.settings.cookieMonster) {\n        $.cookie(this.settings.cookieName, 'ridden', { expires: this.settings.cookieExpires, domain: this.settings.cookieDomain });\n      }\n\n      if (this.settings.timer > 0) {\n        clearTimeout(this.settings.automate);\n      }\n\n      if (this.settings.modal && this.settings.expose) {\n        this.un_expose();\n      }\n\n      this.settings.$next_tip.data('closed', true);\n\n      $('.joyride-modal-bg').hide();\n      this.settings.$current_tip.hide();\n      this.settings.postStepCallback(this.settings.$li.index(), this.settings.$current_tip);\n      this.settings.postRideCallback(this.settings.$li.index(), this.settings.$current_tip);\n      $('.joyride-tip-guide').remove();\n    },\n\n    outerHTML : function (el) {\n      // support FireFox < 11\n      return el.outerHTML || new XMLSerializer().serializeToString(el);\n    },\n\n    off : function () {\n      $(this.scope).off('.joyride');\n      $(window).off('.joyride');\n      $('.joyride-close-tip, .joyride-next-tip, .joyride-modal-bg').off('.joyride');\n      $('.joyride-tip-guide, .joyride-modal-bg').remove();\n      clearTimeout(this.settings.automate);\n      this.settings = {};\n    },\n\n    reflow : function () {}\n  };\n}(Foundation.zj, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.js":"/*\n * Foundation Responsive Library\n * http://foundation.zurb.com\n * Copyright 2013, ZURB\n * Free to use under the MIT license.\n * http://www.opensource.org/licenses/mit-license.php\n*/\n\n/*jslint unparam: true, browser: true, indent: 2 */\n\n// Accommodate running jQuery or Zepto in noConflict() mode by\n// using an anonymous function to redefine the $ shorthand name.\n// See http://docs.jquery.com/Using_jQuery_with_Other_Libraries\n// and http://zeptojs.com/\nvar libFuncName = null;\n\nif (typeof jQuery === \"undefined\" &&\n    typeof Zepto === \"undefined\" &&\n    typeof $ === \"function\") {\n  libFuncName = $;\n} else if (typeof jQuery === \"function\") {\n  libFuncName = jQuery;\n} else if (typeof Zepto === \"function\") {\n  libFuncName = Zepto;\n} else {\n  throw new TypeError();\n}\n\n(function ($, window, document, undefined) {\n  'use strict';\n\n  /*\n    matchMedia() polyfill - Test a CSS media \n    type/query in JS. Authors & copyright (c) 2012: \n    Scott Jehl, Paul Irish, Nicholas Zakas. \n    Dual MIT/BSD license\n\n    https://github.com/paulirish/matchMedia.js\n  */\n\n  window.matchMedia = window.matchMedia || (function( doc, undefined ) {\n\n    \"use strict\";\n\n    var bool,\n        docElem = doc.documentElement,\n        refNode = docElem.firstElementChild || docElem.firstChild,\n        // fakeBody required for <FF4 when executed in <head>\n        fakeBody = doc.createElement( \"body\" ),\n        div = doc.createElement( \"div\" );\n\n    div.id = \"mq-test-1\";\n    div.style.cssText = \"position:absolute;top:-100em\";\n    fakeBody.style.background = \"none\";\n    fakeBody.appendChild(div);\n\n    return function(q){\n\n      div.innerHTML = \"&shy;<style media=\\\"\" + q + \"\\\"> #mq-test-1 { width: 42px; }</style>\";\n\n      docElem.insertBefore( fakeBody, refNode );\n      bool = div.offsetWidth === 42;\n      docElem.removeChild( fakeBody );\n\n      return {\n        matches: bool,\n        media: q\n      };\n\n    };\n\n  }( document ));\n\n  // add dusty browser stuff\n  if (!Array.prototype.filter) {\n    Array.prototype.filter = function(fun /*, thisp */) {\n      \"use strict\";\n   \n      if (this == null) {\n        throw new TypeError();\n      }\n\n      var t = Object(this),\n          len = t.length >>> 0;\n      if (typeof fun != \"function\") {\n          return;\n      }\n\n      var res = [],\n          thisp = arguments[1];\n      for (var i = 0; i < len; i++) {\n        if (i in t) {\n          var val = t[i]; // in case fun mutates this\n          if (fun && fun.call(thisp, val, i, t)) {\n            res.push(val);\n          }\n        }\n      }\n\n      return res;\n    }\n  }\n\n  if (!Function.prototype.bind) {\n    Function.prototype.bind = function (oThis) {\n      if (typeof this !== \"function\") {\n        // closest thing possible to the ECMAScript 5 internal IsCallable function\n        throw new TypeError(\"Function.prototype.bind - what is trying to be bound is not callable\");\n      }\n   \n      var aArgs = Array.prototype.slice.call(arguments, 1), \n          fToBind = this, \n          fNOP = function () {},\n          fBound = function () {\n            return fToBind.apply(this instanceof fNOP && oThis\n               ? this\n               : oThis,\n             aArgs.concat(Array.prototype.slice.call(arguments)));\n          };\n   \n      fNOP.prototype = this.prototype;\n      fBound.prototype = new fNOP();\n   \n      return fBound;\n    };\n  }\n\n  if (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function (searchElement /*, fromIndex */ ) {\n      \"use strict\";\n      if (this == null) {\n        throw new TypeError();\n      }\n      var t = Object(this);\n      var len = t.length >>> 0;\n      if (len === 0) {\n        return -1;\n      }\n      var n = 0;\n      if (arguments.length > 1) {\n        n = Number(arguments[1]);\n        if (n != n) { // shortcut for verifying if it's NaN\n          n = 0;\n        } else if (n != 0 && n != Infinity && n != -Infinity) {\n          n = (n > 0 || -1) * Math.floor(Math.abs(n));\n        }\n      }\n      if (n >= len) {\n          return -1;\n      }\n      var k = n >= 0 ? n : Math.max(len - Math.abs(n), 0);\n      for (; k < len; k++) {\n        if (k in t && t[k] === searchElement) {\n          return k;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // fake stop() for zepto.\n  $.fn.stop = $.fn.stop || function() {\n    return this;\n  };\n\n  window.Foundation = {\n    name : 'Foundation',\n\n    version : '4.2.0',\n\n    cache : {},\n\n    init : function (scope, libraries, method, options, response, /* internal */ nc) {\n      var library_arr,\n          args = [scope, method, options, response],\n          responses = [],\n          nc = nc || false;\n\n      // disable library error catching,\n      // used for development only\n      if (nc) this.nc = nc;\n\n      // check RTL\n      this.rtl = /rtl/i.test($('html').attr('dir'));\n\n      // set foundation global scope\n      this.scope = scope || this.scope;\n\n      if (libraries && typeof libraries === 'string' && !/reflow/i.test(libraries)) {\n        if (/off/i.test(libraries)) return this.off();\n\n        library_arr = libraries.split(' ');\n\n        if (library_arr.length > 0) {\n          for (var i = library_arr.length - 1; i >= 0; i--) {\n            responses.push(this.init_lib(library_arr[i], args));\n          }\n        }\n      } else {\n        if (/reflow/i.test(libraries)) args[1] = 'reflow';\n\n        for (var lib in this.libs) {\n          responses.push(this.init_lib(lib, args));\n        }\n      }\n\n      // if first argument is callback, add to args\n      if (typeof libraries === 'function') {\n        args.unshift(libraries);\n      }\n\n      return this.response_obj(responses, args);\n    },\n\n    response_obj : function (response_arr, args) {\n      for (var i = 0, len = args.length; i < len; i++) {\n        if (typeof args[i] === 'function') {\n          return args[i]({\n            errors: response_arr.filter(function (s) {\n              if (typeof s === 'string') return s;\n            })\n          });\n        }\n      }\n\n      return response_arr;\n    },\n\n    init_lib : function (lib, args) {\n      return this.trap(function () {\n        if (this.libs.hasOwnProperty(lib)) {\n          this.patch(this.libs[lib]);\n          return this.libs[lib].init.apply(this.libs[lib], args);\n        }\n        else {\n          return function () {};\n        }\n      }.bind(this), lib);\n    },\n\n    trap : function (fun, lib) {\n      if (!this.nc) {\n        try {\n          return fun();\n        } catch (e) {\n          return this.error({name: lib, message: 'could not be initialized', more: e.name + ' ' + e.message});\n        }\n      }\n\n      return fun();\n    },\n\n    patch : function (lib) {\n      this.fix_outer(lib);\n      lib.scope = this.scope;\n      lib.rtl = this.rtl;\n    },\n\n    inherit : function (scope, methods) {\n      var methods_arr = methods.split(' ');\n\n      for (var i = methods_arr.length - 1; i >= 0; i--) {\n        if (this.lib_methods.hasOwnProperty(methods_arr[i])) {\n          this.libs[scope.name][methods_arr[i]] = this.lib_methods[methods_arr[i]];\n        }\n      }\n    },\n\n    random_str : function (length) {\n      var chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXTZabcdefghiklmnopqrstuvwxyz'.split('');\n\n      if (!length) {\n        length = Math.floor(Math.random() * chars.length);\n      }\n\n      var str = '';\n      for (var i = 0; i < length; i++) {\n        str += chars[Math.floor(Math.random() * chars.length)];\n      }\n      return str;\n    },\n\n    libs : {},\n\n    // methods that can be inherited in libraries\n    lib_methods : {\n      set_data : function (node, data) {\n        // this.name references the name of the library calling this method\n        var id = [this.name,+new Date(),Foundation.random_str(5)].join('-');\n\n        Foundation.cache[id] = data;\n        node.attr('data-' + this.name + '-id', id);\n        return data;\n      },\n\n      get_data : function (node) {\n        return Foundation.cache[node.attr('data-' + this.name + '-id')];\n      },\n\n      remove_data : function (node) {\n        if (node) {\n          delete Foundation.cache[node.attr('data-' + this.name + '-id')];\n          node.attr('data-' + this.name + '-id', '');\n        } else {\n          $('[data-' + this.name + '-id]').each(function () {\n            delete Foundation.cache[$(this).attr('data-' + this.name + '-id')];\n            $(this).attr('data-' + this.name + '-id', '');\n          });\n        }\n      },\n\n      throttle : function(fun, delay) {\n        var timer = null;\n        return function () {\n          var context = this, args = arguments;\n          clearTimeout(timer);\n          timer = setTimeout(function () {\n            fun.apply(context, args);\n          }, delay);\n        };\n      },\n\n      // parses data-options attribute on nodes and turns\n      // them into an object\n      data_options : function (el) {\n        var opts = {}, ii, p,\n            opts_arr = (el.attr('data-options') || ':').split(';'),\n            opts_len = opts_arr.length;\n\n        function isNumber (o) {\n          return ! isNaN (o-0) && o !== null && o !== \"\" && o !== false && o !== true;\n        }\n\n        function trim(str) {\n          if (typeof str === 'string') return $.trim(str);\n          return str;\n        }\n\n        // parse options\n        for (ii = opts_len - 1; ii >= 0; ii--) {\n          p = opts_arr[ii].split(':');\n\n          if (/true/i.test(p[1])) p[1] = true;\n          if (/false/i.test(p[1])) p[1] = false;\n          if (isNumber(p[1])) p[1] = parseInt(p[1], 10);\n\n          if (p.length === 2 && p[0].length > 0) {\n            opts[trim(p[0])] = trim(p[1]);\n          }\n        }\n\n        return opts;\n      },\n\n      delay : function (fun, delay) {\n        return setTimeout(fun, delay);\n      },\n\n      // animated scrolling\n      scrollTo : function (el, to, duration) {\n        if (duration < 0) return;\n        var difference = to - $(window).scrollTop();\n        var perTick = difference / duration * 10;\n\n        this.scrollToTimerCache = setTimeout(function() {\n          if (!isNaN(parseInt(perTick, 10))) {\n            window.scrollTo(0, $(window).scrollTop() + perTick);\n            this.scrollTo(el, to, duration - 10);\n          }\n        }.bind(this), 10);\n      },\n\n      // not supported in core Zepto\n      scrollLeft : function (el) {\n        if (!el.length) return;\n        return ('scrollLeft' in el[0]) ? el[0].scrollLeft : el[0].pageXOffset;\n      },\n\n      // test for empty object or array\n      empty : function (obj) {\n        if (obj.length && obj.length > 0)    return false;\n        if (obj.length && obj.length === 0)  return true;\n\n        for (var key in obj) {\n          if (hasOwnProperty.call(obj, key))    return false;\n        }\n\n        return true;\n      }\n    },\n\n    fix_outer : function (lib) {\n      lib.outerHeight = function (el, bool) {\n        if (typeof Zepto === 'function') {\n          return el.height();\n        }\n\n        if (typeof bool !== 'undefined') {\n          return el.outerHeight(bool);\n        }\n\n        return el.outerHeight();\n      };\n\n      lib.outerWidth = function (el) {\n        if (typeof Zepto === 'function') {\n          return el.width();\n        }\n\n        if (typeof bool !== 'undefined') {\n          return el.outerWidth(bool);\n        }\n\n        return el.outerWidth();\n      };\n    },\n\n    error : function (error) {\n      return error.name + ' ' + error.message + '; ' + error.more;\n    },\n\n    // remove all foundation events.\n    off: function () {\n      $(this.scope).off('.fndtn');\n      $(window).off('.fndtn');\n      return true;\n    },\n\n    zj : function () {\n      if (typeof Zepto !== 'undefined') {\n        return Zepto;\n      } else {\n        return jQuery;\n      }\n    }()\n  };\n\n  $.fn.foundation = function () {\n    var args = Array.prototype.slice.call(arguments, 0);\n\n    return this.each(function () {\n      Foundation.init.apply(Foundation, [this].concat(args));\n      return this;\n    });\n  };\n\n}(libFuncName, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.magellan.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.magellan = {\n    name : 'magellan',\n\n    version : '4.2.0',\n\n    settings : {\n      activeClass: 'active'\n    },\n\n    init : function (scope, method, options) {\n      this.scope = scope || this.scope;\n      Foundation.inherit(this, 'data_options');\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, method);\n      }\n\n      if (typeof method != 'string') {\n        if (!this.settings.init) {\n          this.fixed_magellan = $(\"[data-magellan-expedition]\");\n          this.set_threshold();\n          this.last_destination = $('[data-magellan-destination]').last();\n          this.events();\n        }\n\n        return this.settings.init;\n      } else {\n        return this[method].call(this, options);\n      }\n    },\n\n    events : function () {\n      var self = this;\n      $(this.scope).on('arrival.fndtn.magellan', '[data-magellan-arrival]', function (e) {\n        var $destination = $(this),\n            $expedition = $destination.closest('[data-magellan-expedition]'),\n            activeClass = $expedition.attr('data-magellan-active-class') \n              || self.settings.activeClass;\n\n          $destination\n            .closest('[data-magellan-expedition]')\n            .find('[data-magellan-arrival]')\n            .not($destination)\n            .removeClass(activeClass);\n          $destination.addClass(activeClass);\n      });\n\n      this.fixed_magellan\n        .on('update-position.fndtn.magellan', function(){\n          var $el = $(this);\n          // $el.data(\"magellan-fixed-position\",\"\");\n          // $el.data(\"magellan-top-offset\", \"\");\n        })\n        .trigger('update-position');\n\n      $(window)\n        .on('resize.fndtn.magellan', function() {\n          this.fixed_magellan.trigger('update-position');\n        }.bind(this))\n\n        .on('scroll.fndtn.magellan', function() {\n          var windowScrollTop = $(window).scrollTop();\n          self.fixed_magellan.each(function() {\n            var $expedition = $(this);\n            if (typeof $expedition.data('magellan-top-offset') === 'undefined') {\n              $expedition.data('magellan-top-offset', $expedition.offset().top);\n            }\n            if (typeof $expedition.data('magellan-fixed-position') === 'undefined') {\n              $expedition.data('magellan-fixed-position', false)\n            }\n            var fixed_position = (windowScrollTop + self.settings.threshold) > $expedition.data(\"magellan-top-offset\");\n            var attr = $expedition.attr('data-magellan-top-offset');\n\n            if ($expedition.data(\"magellan-fixed-position\") != fixed_position) {\n              $expedition.data(\"magellan-fixed-position\", fixed_position);\n              if (fixed_position) {\n                $expedition.css({position:\"fixed\", top:0});\n              } else {\n                $expedition.css({position:\"\", top:\"\"});\n              }\n              if (fixed_position && typeof attr != 'undefined' && attr != false) {\n                $expedition.css({position:\"fixed\", top:attr + \"px\"});\n              }\n            }\n          });\n        });\n\n\n      if (this.last_destination.length > 0) {\n        $(window).on('scroll.fndtn.magellan', function (e) {\n          var windowScrollTop = $(window).scrollTop(),\n              scrolltopPlusHeight = windowScrollTop + $(window).height(),\n              lastDestinationTop = Math.ceil(self.last_destination.offset().top);\n\n          $('[data-magellan-destination]').each(function () {\n            var $destination = $(this),\n                destination_name = $destination.attr('data-magellan-destination'),\n                topOffset = $destination.offset().top - windowScrollTop;\n\n            if (topOffset <= self.settings.threshold) {\n              $(\"[data-magellan-arrival='\" + destination_name + \"']\").trigger('arrival');\n            }\n            // In large screens we may hit the bottom of the page and dont reach the top of the last magellan-destination, so lets force it\n            if (scrolltopPlusHeight >= $(self.scope).height() && lastDestinationTop > windowScrollTop && lastDestinationTop < scrolltopPlusHeight) {\n              $('[data-magellan-arrival]').last().trigger('arrival');\n            }\n          });\n        });\n      }\n\n      this.settings.init = true;\n    },\n\n    set_threshold : function () {\n      if (!this.settings.threshold) {\n        this.settings.threshold = (this.fixed_magellan.length > 0) ? \n          this.outerHeight(this.fixed_magellan, true) : 0;\n      }\n    },\n\n    off : function () {\n      $(this.scope).off('.fndtn.magellan');\n    },\n\n    reflow : function () {}\n  };\n}(Foundation.zj, this, this.document));","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.orbit.js":";(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs = Foundation.libs || {};\n\n  Foundation.libs.orbit = {\n    name: 'orbit',\n\n    version: '4.2.0',\n\n    settings: {\n      timer_speed: 10000,\n      pause_on_hover: true,\n      resume_on_mouseout: false,\n      animation_speed: 500,\n      bullets: true,\n      stack_on_small: true,\n      navigation_arrows: true,\n      slide_number: true,\n      container_class: 'orbit-container',\n      stack_on_small_class: 'orbit-stack-on-small',\n      next_class: 'orbit-next',\n      prev_class: 'orbit-prev',\n      timer_container_class: 'orbit-timer',\n      timer_paused_class: 'paused',\n      timer_progress_class: 'orbit-progress',\n      slides_container_class: 'orbit-slides-container',\n      bullets_container_class: 'orbit-bullets',\n      bullets_active_class: 'active',\n      slide_number_class: 'orbit-slide-number',\n      caption_class: 'orbit-caption',\n      active_slide_class: 'active',\n      orbit_transition_class: 'orbit-transitioning'\n    },\n\n    init: function (scope, method, options) {\n      var self = this;\n      Foundation.inherit(self, 'data_options');\n\n      if (typeof method === 'object') {\n        $.extend(true, self.settings, method);\n      }\n\n      if ($(scope).is('[data-orbit]')) {\n        var scoped_self = $.extend(true, {}, self);\n        scoped_self._init(idx, el);\n      }\n\n      $('[data-orbit]', scope).each(function(idx, el) {\n        var scoped_self = $.extend(true, {}, self);\n        scoped_self._init(idx, el);\n      });\n    },\n\n    _container_html: function() {\n      var self = this;\n      return '<div class=\"' + self.settings.container_class + '\"></div>';\n    },\n\n    _bullets_container_html: function($slides) {\n      var self = this,\n          $list = $('<ol class=\"' + self.settings.bullets_container_class + '\"></ol>');\n      $slides.each(function(idx, slide) {\n        var $item = $('<li data-orbit-slide-number=\"' + (idx+1) + '\" class=\"\"></li>');\n        if (idx === 0) {\n          $item.addClass(self.settings.bullets_active_class);\n        }\n        $list.append($item);\n      });\n      return $list;\n    },\n\n    _slide_number_html: function(slide_number, total_slides) {\n      var self = this,\n          $container = $('<div class=\"' + self.settings.slide_number_class + '\"></div>');\n      $container.append('<span>' + slide_number + '</span> of <span>' + total_slides + '</span>');\n      return $container;\n    },\n\n    _timer_html: function() {\n      var self = this;\n      if (typeof self.settings.timer_speed === 'number' && self.settings.timer_speed > 0) {\n        return '<div class=\"' + self.settings.timer_container_class\n          + '\"><span></span><div class=\"' + self.settings.timer_progress_class\n          + '\"></div></div>';\n      } else {\n        return '';\n      }\n    },\n\n    _next_html: function() {\n      var self = this;\n      return '<a href=\"#\" class=\"' + self.settings.next_class + '\">Next <span></span></a>';\n    },\n\n    _prev_html: function() {\n      var self = this;\n      return '<a href=\"#\" class=\"' + self.settings.prev_class + '\">Prev <span></span></a>';\n    },\n\n    _init: function (idx, slider) {\n      var self = this,\n          $slides_container = $(slider),\n          $container = $slides_container.wrap(self._container_html()).parent(),\n          $slides = $slides_container.children();\n      \n      $.extend(true, self.settings, self.data_options($slides_container));\n\n      if (self.settings.navigation_arrows) {\n          $container.append(self._prev_html());\n          $container.append(self._next_html());\n      }\n      $slides_container.addClass(self.settings.slides_container_class);\n      if (self.settings.stack_on_small) {\n        $container.addClass(self.settings.stack_on_small_class);\n      }\n      if (self.settings.slide_number) {\n        $container.append(self._slide_number_html(1, $slides.length));\n      }\n      $container.append(self._timer_html());\n      if (self.settings.bullets) {\n        $container.after(self._bullets_container_html($slides));\n      }\n      // To better support the \"sliding\" effect it's easier\n      // if we just clone the first and last slides\n      $slides_container.append($slides.first().clone().attr('data-orbit-slide',''));\n      $slides_container.prepend($slides.last().clone().attr('data-orbit-slide',''));\n      // Make the first \"real\" slide active\n      $slides_container.css(Foundation.rtl ? 'marginRight' : 'marginLeft', '-100%');\n      $slides.first().addClass(self.settings.active_slide_class);\n\n      self._init_events($slides_container);\n      self._init_dimensions($slides_container);\n      self._start_timer($slides_container);\n    },\n\n    _init_events: function ($slides_container) {\n      var self = this,\n          $container = $slides_container.parent();\n\n      $(window)\n        .on('load.fndtn.orbit', function() {\n          $slides_container.height('');\n          $slides_container.height($slides_container.height($container.height()));\n          $slides_container.trigger('orbit:ready');\n        })\n        .on('resize.fndtn.orbit', function() {\n          $slides_container.height('');\n          $slides_container.height($slides_container.height($container.height()));\n        });\n\n      $(document).on('click.fndtn.orbit', '[data-orbit-link]', function(e) {\n        e.preventDefault();\n        var id = $(e.currentTarget).attr('data-orbit-link'),\n            $slide = $slides_container.find('[data-orbit-slide=' + id + ']').first();\n\n        if ($slide.length === 1) {\n          self._reset_timer($slides_container, true);\n          self._goto($slides_container, $slide.index(), function() {});\n        }\n      });\n\n      $container.siblings('.' + self.settings.bullets_container_class)\n        .on('click.fndtn.orbit', '[data-orbit-slide-number]', function(e) {\n          e.preventDefault();\n          self._reset_timer($slides_container, true);\n          self._goto($slides_container, $(e.currentTarget).data('orbit-slide-number'),function() {});\n        });\n\n      $container\n        .on('mouseenter.fndtn.orbit', function(e) {\n          if (self.settings.pause_on_hover) {\n            self._stop_timer($slides_container);\n          }\n        })\n        .on('mouseleave.fndtn.orbit', function(e) {\n          if (self.settings.resume_on_mouseout) {\n            self._start_timer($slides_container);\n          }\n        })\n        .on('orbit:after-slide-change.fndtn.orbit', function(e, orbit) {\n          var $slide_number = $container.find('.' + self.settings.slide_number_class);\n\n          if ($slide_number.length === 1) {\n            $slide_number.replaceWith(self._slide_number_html(orbit.slide_number, orbit.total_slides));\n          }\n        })\n        .on('orbit:next-slide.fndtn.orbit click.fndtn.orbit', '.' + self.settings.next_class, function(e) {\n          e.preventDefault();\n          self._reset_timer($slides_container, true);\n          self._goto($slides_container, 'next', function() {});\n        })\n        .on('orbit:prev-slide.fndtn.orbit click.fndtn.orbit', '.' + self.settings.prev_class, function(e) {\n          e.preventDefault();\n          self._reset_timer($slides_container, true);\n          self._goto($slides_container, 'prev', function() {});\n        })\n        .on('orbit:toggle-play-pause.fndtn.orbit click.fndtn.orbit touchstart.fndtn.orbit', '.' + self.settings.timer_container_class, function(e) {\n          e.preventDefault();\n          var $timer = $(e.currentTarget).toggleClass(self.settings.timer_paused_class),\n              $slides_container = $timer.closest('.' + self.settings.container_class)\n                .find('.' + self.settings.slides_container_class);\n\n          if ($timer.hasClass(self.settings.timer_paused_class)) {\n            self._stop_timer($slides_container);\n          } else {\n            self._start_timer($slides_container);\n          }\n        })\n        .on('touchstart.fndtn.orbit', function(e) {\n          if (!e.touches) { e = e.originalEvent; }\n          var data = {\n            start_page_x: e.touches[0].pageX,\n            start_page_y: e.touches[0].pageY,\n            start_time: (new Date()).getTime(),\n            delta_x: 0,\n            is_scrolling: undefined\n          };\n          $container.data('swipe-transition', data);\n          e.stopPropagation();\n        })\n        .on('touchmove.fndtn.orbit', function(e) {\n          if (!e.touches) { e = e.originalEvent; }\n          // Ignore pinch/zoom events\n          if(e.touches.length > 1 || e.scale && e.scale !== 1) return;\n\n          var data = $container.data('swipe-transition');\n          if (typeof data === 'undefined') {\n            data = {};\n          }\n\n          data.delta_x = e.touches[0].pageX - data.start_page_x;\n\n          if ( typeof data.is_scrolling === 'undefined') {\n            data.is_scrolling = !!( data.is_scrolling || Math.abs(data.delta_x) < Math.abs(e.touches[0].pageY - data.start_page_y) );\n          }\n\n          if (!data.is_scrolling && !data.active) {\n            e.preventDefault();\n            self._stop_timer($slides_container);\n            var direction = (data.delta_x < 0) ? 'next' : 'prev';\n            data.active = true;\n            self._goto($slides_container, direction, function() {});\n          }\n        })\n        .on('touchend.fndtn.orbit', function(e) {\n          $container.data('swipe-transition', {});\n          e.stopPropagation();\n        });\n    },\n\n    _init_dimensions: function ($slides_container) {\n      var $container = $slides_container.parent(),\n          $slides = $slides_container.children();\n\n      $slides_container.css('width', $slides.length * 100 + '%');\n      $slides.css('width', 100 / $slides.length + '%');\n      $slides_container.height($container.height());\n      $slides_container.css('width', $slides.length * 100 + '%');\n    },\n\n    _start_timer: function ($slides_container) {\n      var self = this,\n          $container = $slides_container.parent();\n\n      var callback = function() {\n        self._reset_timer($slides_container, false);\n        self._goto($slides_container, 'next', function() {\n          self._start_timer($slides_container);\n        });\n      };\n\n      var $timer = $container.find('.' + self.settings.timer_container_class),\n          $progress = $timer.find('.' + self.settings.timer_progress_class),\n          progress_pct = ($progress.width() / $timer.width()),\n          delay = self.settings.timer_speed - (progress_pct * self.settings.timer_speed);\n\n      $progress.animate({'width': '100%'}, delay, 'linear', callback);\n      $slides_container.trigger('orbit:timer-started');\n    },\n\n    _stop_timer: function ($slides_container) {\n      var self = this,\n          $container = $slides_container.parent(),\n          $timer = $container.find('.' + self.settings.timer_container_class),\n          $progress = $timer.find('.' + self.settings.timer_progress_class),\n          progress_pct = $progress.width() / $timer.width();\n      self._rebuild_timer($container, progress_pct * 100 + '%');\n      // $progress.stop();\n      $slides_container.trigger('orbit:timer-stopped');\n      $timer = $container.find('.' + self.settings.timer_container_class);\n      $timer.addClass(self.settings.timer_paused_class);\n    },\n\n    _reset_timer: function($slides_container, is_paused) {\n      var self = this,\n          $container = $slides_container.parent();\n      self._rebuild_timer($container, '0%');\n      if (typeof is_paused === 'boolean' && is_paused) {\n        var $timer = $container.find('.' + self.settings.timer_container_class);\n        $timer.addClass(self.settings.timer_paused_class);\n      }\n    },\n\n    _rebuild_timer: function ($container, width_pct) {\n      // Zepto is unable to stop animations since they\n      // are css-based. This is a workaround for that\n      // limitation, which rebuilds the dom element\n      // thus stopping the animation\n      var self = this,\n          $timer = $container.find('.' + self.settings.timer_container_class),\n          $new_timer = $(self._timer_html()),\n          $new_timer_progress = $new_timer.find('.' + self.settings.timer_progress_class);\n\n      if (typeof Zepto === 'function') {\n        $timer.remove();\n        $container.append($new_timer);\n        $new_timer_progress.css('width', width_pct);\n      } else if (typeof jQuery === 'function') {\n        var $progress = $timer.find('.' + self.settings.timer_progress_class);\n        $progress.css('width', width_pct);\n        $progress.stop();\n      }\n    },\n\n    _goto: function($slides_container, index_or_direction, callback) {\n      var self = this,\n          $container = $slides_container.parent(),\n          $slides = $slides_container.children(),\n          $active_slide = $slides_container.find('.' + self.settings.active_slide_class),\n          active_index = $active_slide.index(),\n          margin_position = Foundation.rtl ? 'marginRight' : 'marginLeft';\n\n      if ($container.hasClass(self.settings.orbit_transition_class)) {\n        return false;\n      }\n\n      if (index_or_direction === 'prev') {\n        if (active_index === 0) {\n          active_index = $slides.length - 1;\n        }\n        else {\n          active_index--;\n        }\n      }\n      else if (index_or_direction === 'next') {\n        active_index = (active_index+1) % $slides.length;\n      }\n      else if (typeof index_or_direction === 'number') {\n        active_index = (index_or_direction % $slides.length);\n      }\n      if (active_index === ($slides.length - 1) && index_or_direction === 'next') {\n        $slides_container.css(margin_position, '0%');\n        active_index = 1;\n      }\n      else if (active_index === 0 && index_or_direction === 'prev') {\n        $slides_container.css(margin_position, '-' + ($slides.length - 1) * 100 + '%');\n        active_index = $slides.length - 2;\n      }\n      // Start transition, make next slide active\n      $container.addClass(self.settings.orbit_transition_class);\n      $active_slide.removeClass(self.settings.active_slide_class);\n      $($slides[active_index]).addClass(self.settings.active_slide_class);\n      // Make next bullet active\n      var $bullets = $container.siblings('.' + self.settings.bullets_container_class);\n      if ($bullets.length === 1) {\n        $bullets.children().removeClass(self.settings.bullets_active_class);\n        $($bullets.children()[active_index-1]).addClass(self.settings.bullets_active_class);\n      }\n      var new_margin_left = '-' + (active_index * 100) + '%';\n      // Check to see if animation will occur, otherwise perform\n      // callbacks manually\n      $slides_container.trigger('orbit:before-slide-change');\n      if ($slides_container.css(margin_position) === new_margin_left) {\n        $container.removeClass(self.settings.orbit_transition_class);\n        $slides_container.trigger('orbit:after-slide-change', [{slide_number: active_index, total_slides: $slides_container.children().length - 2}]);\n        callback();\n      } else {\n        var properties = {};\n        properties[margin_position] = new_margin_left;\n\n        $slides_container.animate(properties, self.settings.animation_speed, 'linear', function() {\n          $container.removeClass(self.settings.orbit_transition_class);\n          $slides_container.trigger('orbit:after-slide-change', [{slide_number: active_index, total_slides: $slides_container.children().length - 2}]);\n          callback();\n        });\n      }\n    }\n  };\n}(Foundation.zj, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.placeholder.js":"/*! http://mths.be/placeholder v2.0.7 by @mathias \n\tModified to work with Zepto.js by ZURB\n*/\n;(function(window, document, $) {\n\n\tvar isInputSupported = 'placeholder' in document.createElement('input'),\n\t    isTextareaSupported = 'placeholder' in document.createElement('textarea'),\n\t    prototype = $.fn,\n\t    valHooks = $.valHooks,\n\t    hooks,\n\t    placeholder;\n\n\tif (isInputSupported && isTextareaSupported) {\n\n\t\tplaceholder = prototype.placeholder = function() {\n\t\t\treturn this;\n\t\t};\n\n\t\tplaceholder.input = placeholder.textarea = true;\n\n\t} else {\n\n\t\tplaceholder = prototype.placeholder = function() {\n\t\t\tvar $this = this;\n\t\t\t$this\n\t\t\t\t.filter((isInputSupported ? 'textarea' : ':input') + '[placeholder]')\n\t\t\t\t.not('.placeholder')\n\t\t\t\t.bind({\n\t\t\t\t\t'focus.placeholder': clearPlaceholder,\n\t\t\t\t\t'blur.placeholder': setPlaceholder\n\t\t\t\t})\n\t\t\t\t.data('placeholder-enabled', true)\n\t\t\t\t.trigger('blur.placeholder');\n\t\t\treturn $this;\n\t\t};\n\n\t\tplaceholder.input = isInputSupported;\n\t\tplaceholder.textarea = isTextareaSupported;\n\n\t\thooks = {\n\t\t\t'get': function(element) {\n\t\t\t\tvar $element = $(element);\n\t\t\t\treturn $element.data('placeholder-enabled') && $element.hasClass('placeholder') ? '' : element.value;\n\t\t\t},\n\t\t\t'set': function(element, value) {\n\t\t\t\tvar $element = $(element);\n\t\t\t\tif (!$element.data('placeholder-enabled')) {\n\t\t\t\t\treturn element.value = value;\n\t\t\t\t}\n\t\t\t\tif (value == '') {\n\t\t\t\t\telement.value = value;\n\t\t\t\t\t// Issue #56: Setting the placeholder causes problems if the element continues to have focus.\n\t\t\t\t\tif (element != document.activeElement) {\n\t\t\t\t\t\t// We can't use `triggerHandler` here because of dummy text/password inputs :(\n\t\t\t\t\t\tsetPlaceholder.call(element);\n\t\t\t\t\t}\n\t\t\t\t} else if ($element.hasClass('placeholder')) {\n\t\t\t\t\tclearPlaceholder.call(element, true, value) || (element.value = value);\n\t\t\t\t} else {\n\t\t\t\t\telement.value = value;\n\t\t\t\t}\n\t\t\t\t// `set` can not return `undefined`; see http://jsapi.info/jquery/1.7.1/val#L2363\n\t\t\t\treturn $element;\n\t\t\t}\n\t\t};\n\n\t\tisInputSupported || (valHooks.input = hooks);\n\t\tisTextareaSupported || (valHooks.textarea = hooks);\n\n\t\t$(function() {\n\t\t\t// Look for forms\n\t\t\t$(document).delegate('form', 'submit.placeholder', function() {\n\t\t\t\t// Clear the placeholder values so they don't get submitted\n\t\t\t\tvar $inputs = $('.placeholder', this).each(clearPlaceholder);\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t$inputs.each(setPlaceholder);\n\t\t\t\t}, 10);\n\t\t\t});\n\t\t});\n\n\t\t// Clear placeholder values upon page reload\n\t\t$(window).bind('beforeunload.placeholder', function() {\n\t\t\t$('.placeholder').each(function() {\n\t\t\t\tthis.value = '';\n\t\t\t});\n\t\t});\n\n\t}\n\n\tfunction args(elem) {\n\t\t// Return an object of element attributes\n\t\tvar newAttrs = {},\n\t\t    rinlinejQuery = /^jQuery\\d+$/;\n\t\t$.each(elem.attributes, function(i, attr) {\n\t\t\tif (attr.specified && !rinlinejQuery.test(attr.name)) {\n\t\t\t\tnewAttrs[attr.name] = attr.value;\n\t\t\t}\n\t\t});\n\t\treturn newAttrs;\n\t}\n\n\tfunction clearPlaceholder(event, value) {\n\t\tvar input = this,\n\t\t    $input = $(input);\n\t\tif (input.value == $input.attr('placeholder') && $input.hasClass('placeholder')) {\n\t\t\tif ($input.data('placeholder-password')) {\n\t\t\t\t$input = $input.hide().next().show().attr('id', $input.removeAttr('id').data('placeholder-id'));\n\t\t\t\t// If `clearPlaceholder` was called from `$.valHooks.input.set`\n\t\t\t\tif (event === true) {\n\t\t\t\t\treturn $input[0].value = value;\n\t\t\t\t}\n\t\t\t\t$input.focus();\n\t\t\t} else {\n\t\t\t\tinput.value = '';\n\t\t\t\t$input.removeClass('placeholder');\n\t\t\t\tinput == document.activeElement && input.select();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction setPlaceholder() {\n\t\tvar $replacement,\n\t\t    input = this,\n\t\t    $input = $(input),\n\t\t    $origInput = $input,\n\t\t    id = this.id;\n\t\tif (input.value == '') {\n\t\t\tif (input.type == 'password') {\n\t\t\t\tif (!$input.data('placeholder-textinput')) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t$replacement = $input.clone().attr({ 'type': 'text' });\n\t\t\t\t\t} catch(e) {\n\t\t\t\t\t\t$replacement = $('<input>').attr($.extend(args(this), { 'type': 'text' }));\n\t\t\t\t\t}\n\t\t\t\t\t$replacement\n\t\t\t\t\t\t.removeAttr('name')\n\t\t\t\t\t\t.data({\n\t\t\t\t\t\t\t'placeholder-password': true,\n\t\t\t\t\t\t\t'placeholder-id': id\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.bind('focus.placeholder', clearPlaceholder);\n\t\t\t\t\t$input\n\t\t\t\t\t\t.data({\n\t\t\t\t\t\t\t'placeholder-textinput': $replacement,\n\t\t\t\t\t\t\t'placeholder-id': id\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.before($replacement);\n\t\t\t\t}\n\t\t\t\t$input = $input.removeAttr('id').hide().prev().attr('id', id).show();\n\t\t\t\t// Note: `$input[0] != input` now!\n\t\t\t}\n\t\t\t$input.addClass('placeholder');\n\t\t\t$input[0].value = $input.attr('placeholder');\n\t\t} else {\n\t\t\t$input.removeClass('placeholder');\n\t\t}\n\t}\n\n}(this, document, Foundation.zj));","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.reveal.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.reveal = {\n    name: 'reveal',\n\n    version : '4.2.0',\n\n    locked : false,\n\n    settings : {\n      animation: 'fadeAndPop',\n      animationSpeed: 250,\n      closeOnBackgroundClick: true,\n      closeOnEsc: true,\n      dismissModalClass: 'close-reveal-modal',\n      bgClass: 'reveal-modal-bg',\n      open: function(){},\n      opened: function(){},\n      close: function(){},\n      closed: function(){},\n      bg : $('.reveal-modal-bg'),\n      css : {\n        open : {\n          'opacity': 0,\n          'visibility': 'visible',\n          'display' : 'block'\n        },\n        close : {\n          'opacity': 1,\n          'visibility': 'hidden',\n          'display': 'none'\n        }\n      }\n    },\n\n    init : function (scope, method, options) {\n      Foundation.inherit(this, 'data_options delay');\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, method);\n      } else if (typeof options !== 'undefined') {\n        $.extend(true, this.settings, options);\n      }\n\n      if (typeof method != 'string') {\n        this.events();\n\n        return this.settings.init;\n      } else {\n        return this[method].call(this, options);\n      }\n    },\n\n    events : function () {\n      var self = this;\n\n      $(this.scope)\n        .off('.fndtn.reveal')\n        .on('click.fndtn.reveal', '[data-reveal-id]', function (e) {\n          e.preventDefault();\n\n          if (!self.locked) {\n            var element = $(this),\n                ajax = element.data('reveal-ajax');\n\n            self.locked = true;\n\n            if (typeof ajax === 'undefined') {\n              self.open.call(self, element);\n            } else {\n              var url = ajax === true ? element.attr('href') : ajax;\n\n              self.open.call(self, element, {url: url});\n            }\n          }\n        })\n        .on('click.fndtn.reveal touchend.click.fndtn.reveal', this.close_targets(), function (e) {\n          e.preventDefault();\n          if (!self.locked) {\n            var settings = $.extend({}, self.settings, self.data_options($('.reveal-modal.open')));\n            if ($(e.target)[0] === $('.' + settings.bgClass)[0] && !settings.closeOnBackgroundClick) {\n              return;\n            }\n\n            self.locked = true;\n            self.close.call(self, $(this).closest('.reveal-modal'));\n          }\n        })\n        .on('open.fndtn.reveal', '.reveal-modal', this.settings.open)\n        .on('opened.fndtn.reveal', '.reveal-modal', this.settings.opened)\n        .on('opened.fndtn.reveal', '.reveal-modal', this.open_video)\n        .on('close.fndtn.reveal', '.reveal-modal', this.settings.close)\n        .on('closed.fndtn.reveal', '.reveal-modal', this.settings.closed)\n        .on('closed.fndtn.reveal', '.reveal-modal', this.close_video);\n\n      $( 'body' ).bind( 'keyup.reveal', function ( event ) {\n        var open_modal = $('.reveal-modal.open'),\n            settings = $.extend({}, self.settings, self.data_options(open_modal));\n        if ( event.which === 27  && settings.closeOnEsc) { // 27 is the keycode for the Escape key\n          open_modal.foundation('reveal', 'close');\n        }\n      });\n\n      return true;\n    },\n\n    open : function (target, ajax_settings) {\n      if (target) {\n        if (typeof target.selector !== 'undefined') {\n          var modal = $('#' + target.data('reveal-id'));\n        } else {\n          var modal = $(this.scope);\n\n          ajax_settings = target;\n        }\n      } else {\n        var modal = $(this.scope);\n      }\n\n      if (!modal.hasClass('open')) {\n        var open_modal = $('.reveal-modal.open');\n\n        if (typeof modal.data('css-top') === 'undefined') {\n          modal.data('css-top', parseInt(modal.css('top'), 10))\n            .data('offset', this.cache_offset(modal));\n        }\n\n        modal.trigger('open');\n\n        if (open_modal.length < 1) {\n          this.toggle_bg(modal);\n        }\n\n        if (typeof ajax_settings === 'undefined' || !ajax_settings.url) {\n          this.hide(open_modal, this.settings.css.close);\n          this.show(modal, this.settings.css.open);\n        } else {\n          var self = this,\n              old_success = typeof ajax_settings.success !== 'undefined' ? ajax_settings.success : null;\n\n          $.extend(ajax_settings, {\n            success: function (data, textStatus, jqXHR) {\n              if ( $.isFunction(old_success) ) {\n                old_success(data, textStatus, jqXHR);\n              }\n\n              modal.html(data);\n              $(modal).foundation('section', 'reflow');\n\n              self.hide(open_modal, self.settings.css.close);\n              self.show(modal, self.settings.css.open);\n            }\n          });\n\n          $.ajax(ajax_settings);\n        }\n      }\n    },\n\n    close : function (modal) {\n\n      var modal = modal && modal.length ? modal : $(this.scope),\n          open_modals = $('.reveal-modal.open');\n\n      if (open_modals.length > 0) {\n        this.locked = true;\n        modal.trigger('close');\n        this.toggle_bg(modal);\n        this.hide(open_modals, this.settings.css.close);\n      }\n    },\n\n    close_targets : function () {\n      var base = '.' + this.settings.dismissModalClass;\n\n      if (this.settings.closeOnBackgroundClick) {\n        return base + ', .' + this.settings.bgClass;\n      }\n\n      return base;\n    },\n\n    toggle_bg : function (modal) {\n      if ($('.reveal-modal-bg').length === 0) {\n        this.settings.bg = $('<div />', {'class': this.settings.bgClass})\n          .appendTo('body');\n      }\n\n      if (this.settings.bg.filter(':visible').length > 0) {\n        this.hide(this.settings.bg);\n      } else {\n        this.show(this.settings.bg);\n      }\n    },\n\n    show : function (el, css) {\n      // is modal\n      if (css) {\n        if (/pop/i.test(this.settings.animation)) {\n          css.top = $(window).scrollTop() - el.data('offset') + 'px';\n          var end_css = {\n            top: $(window).scrollTop() + el.data('css-top') + 'px',\n            opacity: 1\n          };\n\n          return this.delay(function () {\n            return el\n              .css(css)\n              .animate(end_css, this.settings.animationSpeed, 'linear', function () {\n                this.locked = false;\n                el.trigger('opened');\n              }.bind(this))\n              .addClass('open');\n          }.bind(this), this.settings.animationSpeed / 2);\n        }\n\n        if (/fade/i.test(this.settings.animation)) {\n          var end_css = {opacity: 1};\n\n          return this.delay(function () {\n            return el\n              .css(css)\n              .animate(end_css, this.settings.animationSpeed, 'linear', function () {\n                this.locked = false;\n                el.trigger('opened');\n              }.bind(this))\n              .addClass('open');\n          }.bind(this), this.settings.animationSpeed / 2);\n        }\n\n        return el.css(css).show().css({opacity: 1}).addClass('open').trigger('opened');\n      }\n\n      // should we animate the background?\n      if (/fade/i.test(this.settings.animation)) {\n        return el.fadeIn(this.settings.animationSpeed / 2);\n      }\n\n      return el.show();\n    },\n\n    hide : function (el, css) {\n      // is modal\n      if (css) {\n        if (/pop/i.test(this.settings.animation)) {\n          var end_css = {\n            top: - $(window).scrollTop() - el.data('offset') + 'px',\n            opacity: 0\n          };\n\n          return this.delay(function () {\n            return el\n              .animate(end_css, this.settings.animationSpeed, 'linear', function () {\n                this.locked = false;\n                el.css(css).trigger('closed');\n              }.bind(this))\n              .removeClass('open');\n          }.bind(this), this.settings.animationSpeed / 2);\n        }\n\n        if (/fade/i.test(this.settings.animation)) {\n          var end_css = {opacity: 0};\n\n          return this.delay(function () {\n            return el\n              .animate(end_css, this.settings.animationSpeed, 'linear', function () {\n                this.locked = false;\n                el.css(css).trigger('closed');\n              }.bind(this))\n              .removeClass('open');\n          }.bind(this), this.settings.animationSpeed / 2);\n        }\n\n        return el.hide().css(css).removeClass('open').trigger('closed');\n      }\n\n      // should we animate the background?\n      if (/fade/i.test(this.settings.animation)) {\n        return el.fadeOut(this.settings.animationSpeed / 2);\n      }\n\n      return el.hide();\n    },\n\n    close_video : function (e) {\n      var video = $(this).find('.flex-video'),\n          iframe = video.find('iframe');\n\n      if (iframe.length > 0) {\n        iframe.attr('data-src', iframe[0].src);\n        iframe.attr('src', 'about:blank');\n        video.hide();\n      }\n    },\n\n    open_video : function (e) {\n      var video = $(this).find('.flex-video'),\n          iframe = video.find('iframe');\n\n      if (iframe.length > 0) {\n        var data_src = iframe.attr('data-src');\n        if (typeof data_src === 'string') {\n          iframe[0].src = iframe.attr('data-src');\n        } else {\n          var src = iframe[0].src;\n          iframe[0].src = undefined;\n          iframe[0].src = src;\n        }\n        video.show();\n      }\n    },\n\n    cache_offset : function (modal) {\n      var offset = modal.show().height() + parseInt(modal.css('top'), 10);\n\n      modal.hide();\n\n      return offset;\n    },\n\n    off : function () {\n      $(this.scope).off('.fndtn.reveal');\n    },\n\n    reflow : function () {}\n  };\n}(Foundation.zj, this, this.document));","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.section.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.section = {\n    name: 'section',\n\n    version : '4.2.0',\n\n    settings : {\n      deep_linking: false,\n      one_up: true,\n      section_selector : '[data-section]',\n      region_selector : 'section, .section, [data-section-region]',\n      title_selector : '.title, [data-section-title]',\n      active_region_selector : 'section.active, .section.active, .active[data-section-region]',\n      content_selector : '.content, [data-section-content]',\n      nav_selector : '[data-section=\"vertical-nav\"], [data-section=\"horizontal-nav\"]',\n      callback: function (){}\n    },\n\n    init : function (scope, method, options) {\n      var self = this;\n      Foundation.inherit(this, 'throttle data_options position_right offset_right');\n\n      if (typeof method === 'object') {\n        $.extend(true, self.settings, method);\n      }\n\n      if (typeof method != 'string') {\n        this.set_active_from_hash();\n        this.events();\n\n        return true;\n      } else {\n        return this[method].call(this, options);\n      }\n    },\n\n    events : function () {\n      var self = this;\n\n      $(this.scope)\n        .on('click.fndtn.section', '[data-section] .title, [data-section] [data-section-title]', function (e) {\n          var $this = $(this),\n              section = $this.closest(self.settings.region_selector);\n\n          if (section.children(self.settings.content_selector).length > 0) {\n            self.toggle_active.call(this, e, self);\n            self.reflow();\n          }\n        });\n\n      $(window)\n        .on('resize.fndtn.section', self.throttle(function () {\n          self.resize.call(this);\n        }, 30))\n        .on('hashchange', function () {\n          if (!self.settings.toggled){\n            self.set_active_from_hash();\n            $(this).trigger('resize');\n          }\n        }).trigger('resize');\n\n      $(document)\n        .on('click.fndtn.section', function (e) {\n          if ($(e.target).closest(self.settings.title_selector).length < 1) {\n            $(self.settings.nav_selector)\n              .children(self.settings.region_selector)\n              .removeClass('active')\n              .attr('style', '');\n          }\n        });\n\n    },\n\n    toggle_active : function (e, self) {\n      var $this = $(this),\n          self = Foundation.libs.section,\n          region = $this.closest(self.settings.region_selector),\n          content = $this.siblings(self.settings.content_selector),\n          parent = region.parent(),\n          settings = $.extend({}, self.settings, self.data_options(parent)),\n          prev_active_section = parent\n            .children(self.settings.active_region_selector);\n\n      self.settings.toggled = true;\n\n      if (!settings.deep_linking && content.length > 0) {\n        e.preventDefault();\n      }\n\n      if (region.hasClass('active')) {\n        // this is causing the style flash.\n        if (self.small(parent)\n          || self.is_vertical_nav(parent)\n          || self.is_horizontal_nav(parent)\n          || self.is_accordion(parent)) {\n            if (prev_active_section[0] !== region[0]\n              || (prev_active_section[0] === region[0] && !settings.one_up)) {\n              region\n                .removeClass('active')\n                .attr('style', '');\n            }\n        }\n      } else {\n        var prev_active_section = parent\n              .children(self.settings.active_region_selector),\n            title_height = self.outerHeight(region\n              .children(self.settings.title_selector));\n\n        if (self.small(parent) || settings.one_up) {\n\n          if (self.small(parent)) {\n            prev_active_section.attr('style', '');\n          } else {\n            prev_active_section.attr('style',\n              'visibility: hidden; padding-top: '+title_height+'px;');\n          }\n        }\n\n        if (self.small(parent)) {\n          region.attr('style', '');\n        } else {\n          region.css('padding-top', title_height);\n        }\n\n        region.addClass('active');\n\n        if (prev_active_section.length > 0) {\n          prev_active_section\n            .removeClass('active')\n            .attr('style', '');\n        }\n\n        // Toggle the content display attribute. This is done to\n        // ensure accurate outerWidth measurements that account for\n        // the scrollbar.\n        if (self.is_vertical_tabs(parent)) {\n          content.css('display', 'block');\n\n          if (prev_active_section !== null) {\n            prev_active_section\n              .children(self.settings.content_selector)\n              .css('display', 'none');\n          }\n        }\n      }\n\n      setTimeout(function () {\n        self.settings.toggled = false;\n      }, 300);\n\n      settings.callback();\n    },\n\n    resize : function () {\n      var self = Foundation.libs.section,\n          sections = $(self.settings.section_selector);\n\n      sections.each(function() {\n        var $this = $(this),\n            active_section = $this\n              .children(self.settings.active_region_selector),\n            settings = $.extend({}, self.settings, self.data_options($this));\n\n        if (active_section.length > 1) {\n          active_section\n            .not(':first')\n            .removeClass('active')\n            .attr('style', '');\n        } else if (active_section.length < 1\n          && !self.is_vertical_nav($this)\n          && !self.is_horizontal_nav($this)\n          && !self.is_accordion($this)) {\n\n          var first = $this.children(self.settings.region_selector).first();\n\n          if (settings.one_up || !self.small($this)) {\n            first.addClass('active');\n          }\n\n          if (self.small($this)) {\n            first.attr('style', '');\n          } else {\n            first.css('padding-top', self.outerHeight(first\n              .children(self.settings.title_selector)));\n          }\n        }\n\n        if (self.small($this)) {\n          active_section.attr('style', '');\n        } else {\n          active_section.css('padding-top', self.outerHeight(active_section\n            .children(self.settings.title_selector)));\n        }\n\n        self.position_titles($this);\n\n        if ( (self.is_horizontal_nav($this) && !self.small($this))\n          || self.is_vertical_tabs($this) && !self.small($this)) {\n          self.position_content($this);\n        } else {\n          self.position_content($this, false);\n        }\n      });\n    },\n\n    is_vertical_nav : function (el) {\n      return /vertical-nav/i.test(el.data('section'));\n    },\n\n    is_horizontal_nav : function (el) {\n      return /horizontal-nav/i.test(el.data('section'));\n    },\n\n    is_accordion : function (el) {\n      return /accordion/i.test(el.data('section'));\n    },\n\n    is_horizontal_tabs : function (el) {\n      return /^tabs$/i.test(el.data('section'));\n    },\n\n    is_vertical_tabs : function (el) {\n      return /vertical-tabs/i.test(el.data('section'));\n    },\n\n    set_active_from_hash : function () {\n      var hash = window.location.hash.substring(1),\n          sections = $('[data-section]'),\n          self = this;\n      sections.each(function () {\n        var section = $(this),\n            settings = $.extend({}, self.settings, self.data_options(section));\n\n        if (hash.length > 0 && settings.deep_linking) {\n          var regions = section\n            .children(self.settings.region_selector)\n            .attr('style', '')\n            .removeClass('active');\n\n          var hash_regions = regions.map(function () {\n              var content = $(self.settings.content_selector, this),\n                  content_slug = content.data('slug');\n\n              if (new RegExp(content_slug, 'i').test(hash)) \n                return content;\n            });\n\n\n          var count = hash_regions.length;\n\n          for (var i = count - 1; i >= 0; i--) {\n            $(hash_regions[i]).parent().addClass('active');\n          }\n        }\n      });\n    },\n\n    position_titles : function (section, off) {\n      var self = this,\n          titles = section\n            .children(this.settings.region_selector)\n            .map(function () {\n              return $(this).children(self.settings.title_selector);\n            }),\n          previous_width = 0,\n          previous_height = 0,\n          self = this;\n\n      if (typeof off === 'boolean') {\n        titles.attr('style', '');\n\n      } else {\n        titles.each(function () {\n          if (self.is_vertical_tabs(section)) {\n            $(this).css('top', previous_height);\n            previous_height += self.outerHeight($(this));\n          } else {\n            if (!self.rtl) {\n              $(this).css('left', previous_width);\n            } else {\n              $(this).css('right', previous_width);\n            }\n            previous_width += self.outerWidth($(this));\n          }\n        });\n      }\n    },\n\n    position_content : function (section, off) {\n      var self = this,\n          regions = section.children(self.settings.region_selector),\n          titles = regions\n            .map(function () {\n              return $(this).children(self.settings.title_selector);\n            }),\n          content = regions\n            .map(function () {\n              return $(this).children(self.settings.content_selector);\n            });\n\n      if (typeof off === 'boolean') {\n        content.attr('style', '');\n        section.attr('style', '');\n      } else {\n        if (self.is_vertical_tabs(section)\n            && !self.small(section)) {\n          var content_min_height = 0,\n              content_min_width = Number.MAX_VALUE,\n              title_width = null;\n\n          regions.each(function () {\n            var region = $(this),\n                title = region.children(self.settings.title_selector),\n                content = region.children(self.settings.content_selector),\n                content_width = 0;\n\n            title_width = self.outerWidth(title);\n            content_width = self.outerWidth(section) - title_width;\n\n            if (content_width < content_min_width) {\n              content_min_width = content_width;\n            }\n\n            // Increment the minimum height of the content region\n            // to align with the height of the titles.\n            content_min_height += self.outerHeight(title);\n\n            // Set all of the inactive tabs to 'display: none'\n            // The CSS sets all of the tabs as 'display: block'\n            // in order to account for scrollbars when measuring the width\n            // of the content regions.\n            if (!$(this).hasClass('active')) {\n              content.css('display', 'none');\n            }\n          });\n\n          regions.each(function () {\n            var content = $(this).children(self.settings.content_selector);\n            content.css('minHeight', content_min_height);\n\n            // Remove 2 pixels to account for the right-shift in the CSS\n            content.css('maxWidth', content_min_width - 2);\n          });\n\n        } else {\n          regions.each(function () {\n            var region = $(this),\n                title = region.children(self.settings.title_selector),\n                content = region.children(self.settings.content_selector);\n            if (!self.rtl) {\n              content\n                .css({left: title.position().left - 1,\n                  top: self.outerHeight(title) - 2});\n            } else {\n              content\n                .css({right: self.position_right(title) + 1,\n                  top: self.outerHeight(title) - 2});\n            }\n          });\n\n          // temporary work around for Zepto outerheight calculation issues.\n          if (typeof Zepto === 'function') {\n            section.height(this.outerHeight($(titles[0])));\n          } else {\n            section.height(this.outerHeight($(titles[0])) - 2);\n          }\n        }\n      }\n    },\n\n    position_right : function (el) {\n      var self = this,\n          section = el.closest(this.settings.section_selector),\n          regions = section.children(this.settings.region_selector),\n          section_width = el.closest(this.settings.section_selector).width(),\n          offset = regions\n            .map(function () {\n              return $(this).children(self.settings.title_selector);\n            }).length;\n      return (section_width - el.position().left - el.width() * (el.index() + 1) - offset);\n    },\n\n    reflow : function (scope) {\n      var scope = scope || document;\n      $(this.settings.section_selector, scope).trigger('resize');\n    },\n\n    small : function (el) {\n      var settings = $.extend({}, this.settings, this.data_options(el));\n\n      if (this.is_horizontal_tabs(el)) {\n        return false;\n      }\n      if (el && this.is_accordion(el)) {\n        return true;\n      }\n      if ($('html').hasClass('lt-ie9')) {\n        return true;\n      }\n      if ($('html').hasClass('ie8compat')) {\n        return true;\n      }\n      return $(this.scope).width() < 768;\n    },\n\n    off : function () {\n      $(this.scope).off('.fndtn.section');\n      $(window).off('.fndtn.section');\n      $(document).off('.fndtn.section')\n    }\n  };\n}(Foundation.zj, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.tooltips.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.tooltips = {\n    name: 'tooltips',\n\n    version : '4.2.0',\n\n    settings : {\n      selector : '.has-tip',\n      additionalInheritableClasses : [],\n      tooltipClass : '.tooltip',\n      appendTo: 'body',\n      'disable-for-touch': false,\n      tipTemplate : function (selector, content) {\n        return '<span data-selector=\"' + selector + '\" class=\"' \n          + Foundation.libs.tooltips.settings.tooltipClass.substring(1) \n          + '\">' + content + '<span class=\"nub\"></span></span>';\n      }\n    },\n\n    cache : {},\n\n    init : function (scope, method, options) {\n      Foundation.inherit(this, 'data_options');\n      var self = this;\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, method);\n      } else if (typeof options !== 'undefined') {\n        $.extend(true, this.settings, options);\n      }\n\n      if (typeof method != 'string') {\n        if (Modernizr.touch) {\n          $(this.scope)\n            .on('click.fndtn.tooltip touchstart.fndtn.tooltip touchend.fndtn.tooltip', \n              '[data-tooltip]', function (e) {\n              var settings = $.extend({}, self.settings, self.data_options($(this)));\n              if (!settings['disable-for-touch']) {\n                e.preventDefault();\n                $(settings.tooltipClass).hide();\n                self.showOrCreateTip($(this));\n              }\n            })\n            .on('click.fndtn.tooltip touchstart.fndtn.tooltip touchend.fndtn.tooltip', \n              this.settings.tooltipClass, function (e) {\n              e.preventDefault();\n              $(this).fadeOut(150);\n            });\n        } else {\n          $(this.scope)\n            .on('mouseenter.fndtn.tooltip mouseleave.fndtn.tooltip', \n              '[data-tooltip]', function (e) {\n              var $this = $(this);\n\n              if (/enter|over/i.test(e.type)) {\n                self.showOrCreateTip($this);\n              } else if (e.type === 'mouseout' || e.type === 'mouseleave') {\n                self.hide($this);\n              }\n            });\n        }\n\n        // $(this.scope).data('fndtn-tooltips', true);\n      } else {\n        return this[method].call(this, options);\n      }\n\n    },\n\n    showOrCreateTip : function ($target) {\n      var $tip = this.getTip($target);\n\n      if ($tip && $tip.length > 0) {\n        return this.show($target);\n      }\n\n      return this.create($target);\n    },\n\n    getTip : function ($target) {\n      var selector = this.selector($target),\n          tip = null;\n\n      if (selector) {\n        tip = $('span[data-selector=\"' + selector + '\"]' + this.settings.tooltipClass);\n      }\n\n      return (typeof tip === 'object') ? tip : false;\n    },\n\n    selector : function ($target) {\n      var id = $target.attr('id'),\n          dataSelector = $target.attr('data-tooltip') || $target.attr('data-selector');\n\n      if ((id && id.length < 1 || !id) && typeof dataSelector != 'string') {\n        dataSelector = 'tooltip' + Math.random().toString(36).substring(7);\n        $target.attr('data-selector', dataSelector);\n      }\n\n      return (id && id.length > 0) ? id : dataSelector;\n    },\n\n    create : function ($target) {\n      var $tip = $(this.settings.tipTemplate(this.selector($target), $('<div></div>').html($target.attr('title')).html())),\n          classes = this.inheritable_classes($target);\n\n      $tip.addClass(classes).appendTo(this.settings.appendTo);\n      if (Modernizr.touch) {\n        $tip.append('<span class=\"tap-to-close\">tap to close </span>');\n      }\n      $target.removeAttr('title').attr('title','');\n      this.show($target);\n    },\n\n    reposition : function (target, tip, classes) {\n      var width, nub, nubHeight, nubWidth, column, objPos;\n\n      tip.css('visibility', 'hidden').show();\n\n      width = target.data('width');\n      nub = tip.children('.nub');\n      nubHeight = this.outerHeight(nub);\n      nubWidth = this.outerHeight(nub);\n\n      objPos = function (obj, top, right, bottom, left, width) {\n        return obj.css({\n          'top' : (top) ? top : 'auto',\n          'bottom' : (bottom) ? bottom : 'auto',\n          'left' : (left) ? left : 'auto',\n          'right' : (right) ? right : 'auto',\n          'width' : (width) ? width : 'auto'\n        }).end();\n      };\n\n      objPos(tip, (target.offset().top + this.outerHeight(target) + 10), 'auto', 'auto', target.offset().left, width);\n\n      if ($(window).width() < 767) {\n        objPos(tip, (target.offset().top + this.outerHeight(target) + 10), 'auto', 'auto', 12.5, $(this.scope).width());\n        tip.addClass('tip-override');\n        objPos(nub, -nubHeight, 'auto', 'auto', target.offset().left);\n      } else {\n        var left = target.offset().left;\n        if (Foundation.rtl) {\n          left = target.offset().left + target.offset().width - this.outerWidth(tip);\n        }\n        objPos(tip, (target.offset().top + this.outerHeight(target) + 10), 'auto', 'auto', left, width);\n        tip.removeClass('tip-override');\n        if (classes && classes.indexOf('tip-top') > -1) {\n          objPos(tip, (target.offset().top - this.outerHeight(tip)), 'auto', 'auto', left, width)\n            .removeClass('tip-override');\n        } else if (classes && classes.indexOf('tip-left') > -1) {\n          objPos(tip, (target.offset().top + (this.outerHeight(target) / 2) - nubHeight*2.5), 'auto', 'auto', (target.offset().left - this.outerWidth(tip) - nubHeight), width)\n            .removeClass('tip-override');\n        } else if (classes && classes.indexOf('tip-right') > -1) {\n          objPos(tip, (target.offset().top + (this.outerHeight(target) / 2) - nubHeight*2.5), 'auto', 'auto', (target.offset().left + this.outerWidth(target) + nubHeight), width)\n            .removeClass('tip-override');\n        }\n      }\n\n      tip.css('visibility', 'visible').hide();\n    },\n\n    inheritable_classes : function (target) {\n      var inheritables = ['tip-top', 'tip-left', 'tip-bottom', 'tip-right', 'noradius'].concat(this.settings.additionalInheritableClasses),\n          classes = target.attr('class'),\n          filtered = classes ? $.map(classes.split(' '), function (el, i) {\n            if ($.inArray(el, inheritables) !== -1) {\n              return el;\n            }\n          }).join(' ') : '';\n\n      return $.trim(filtered);\n    },\n\n    show : function ($target) {\n      var $tip = this.getTip($target);\n\n      this.reposition($target, $tip, $target.attr('class'));\n      $tip.fadeIn(150);\n    },\n\n    hide : function ($target) {\n      var $tip = this.getTip($target);\n\n      $tip.fadeOut(150);\n    },\n\n    // deprecate reload\n    reload : function () {\n      var $self = $(this);\n\n      return ($self.data('fndtn-tooltips')) ? $self.foundationTooltips('destroy').foundationTooltips('init') : $self.foundationTooltips('init');\n    },\n\n    off : function () {\n      $(this.scope).off('.fndtn.tooltip');\n      $(this.settings.tooltipClass).each(function (i) {\n        $('[data-tooltip]').get(i).attr('title', $(this).text());\n      }).remove();\n    },\n\n    reflow : function () {}\n  };\n}(Foundation.zj, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/foundation.topbar.js":"/*jslint unparam: true, browser: true, indent: 2 */\n\n;(function ($, window, document, undefined) {\n  'use strict';\n\n  Foundation.libs.topbar = {\n    name : 'topbar',\n\n    version : '4.2.0',\n\n    settings : {\n      index : 0,\n      stickyClass : 'sticky',\n      custom_back_text: true,\n      back_text: 'Back',\n      is_hover: true,\n      scrolltop : true, // jump to top when sticky nav menu toggle is clicked\n      init : false\n    },\n\n    init : function (section, method, options) {\n      Foundation.inherit(this, 'data_options');\n      var self = this;\n\n      if (typeof method === 'object') {\n        $.extend(true, this.settings, method);\n      } else if (typeof options !== 'undefined') {\n        $.extend(true, this.settings, options);\n      }\n\n      if (typeof method != 'string') {\n\n        $('.top-bar, [data-topbar]').each(function () {\n          $.extend(true, self.settings, self.data_options($(this)));\n          self.settings.$w = $(window);\n          self.settings.$topbar = $(this);\n          self.settings.$section = self.settings.$topbar.find('section');\n          self.settings.$titlebar = self.settings.$topbar.children('ul').first();\n          self.settings.$topbar.data('index', 0);\n\n          var breakpoint = $(\"<div class='top-bar-js-breakpoint'/>\").insertAfter(self.settings.$topbar);\n          self.settings.breakPoint = breakpoint.width();\n          breakpoint.remove();\n\n          self.assemble();\n\n          if (self.settings.$topbar.parent().hasClass('fixed')) {\n            $('body').css('padding-top', self.outerHeight(self.settings.$topbar));\n          }\n        });\n\n        if (!self.settings.init) {\n          this.events();\n        }\n\n        return this.settings.init;\n      } else {\n        // fire method\n        return this[method].call(this, options);\n      }\n    },\n\n    events : function () {\n      var self = this;\n      var offst = this.outerHeight($('.top-bar, [data-topbar]'));\n      $(this.scope)\n        .off('.fndtn.topbar')\n        .on('click.fndtn.topbar', '.top-bar .toggle-topbar, [data-topbar] .toggle-topbar', function (e) {\n          var topbar = $(this).closest('.top-bar, [data-topbar]'),\n              section = topbar.find('section, .section'),\n              titlebar = topbar.children('ul').first();\n\n          e.preventDefault();\n\n          if (self.breakpoint()) {\n            if (!self.rtl) {\n              section.css({left: '0%'});\n              section.find('>.name').css({left: '100%'});\n            } else {\n              section.css({right: '0%'});\n              section.find('>.name').css({right: '100%'});\n            }\n\n            section.find('li.moved').removeClass('moved');\n            topbar.data('index', 0);\n\n            topbar\n              .toggleClass('expanded')\n              .css('min-height', '');\n          }\n\n          if (!topbar.hasClass('expanded')) {\n            if (topbar.hasClass('fixed')) {\n              topbar.parent().addClass('fixed');\n              topbar.removeClass('fixed');\n              $('body').css('padding-top',offst);\n            }\n          } else if (topbar.parent().hasClass('fixed')) {\n            topbar.parent().removeClass('fixed');\n            topbar.addClass('fixed');\n            $('body').css('padding-top','0');\n\n            if (self.settings.scrolltop) {\n              window.scrollTo(0,0);\n            }\n          }\n        })\n\n        .on('mouseenter mouseleave', '.top-bar li', function (e) {\n          if (!self.settings.is_hover) return;\n\n          if (/enter|over/i.test(e.type)) {\n            $(this).addClass('hover');\n          } else {\n            $(this).removeClass('hover');\n          }\n        })\n\n        .on('click.fndtn.topbar', '.top-bar li.has-dropdown', function (e) {\n          if (self.breakpoint()) return;\n\n          var li = $(this),\n              target = $(e.target),\n              topbar = li.closest('[data-topbar], .top-bar'),\n              is_hover = topbar.data('topbar');\n\n          if (self.settings.is_hover && !Modernizr.touch) return;\n\n          e.stopImmediatePropagation();\n\n          if (target[0].nodeName === 'A' && target.parent().hasClass('has-dropdown')) {\n            e.preventDefault();\n          }\n\n          if (li.hasClass('hover')) {\n            li\n              .removeClass('hover')\n              .find('li')\n              .removeClass('hover');\n          } else {\n            li.addClass('hover');\n          }\n        })\n\n        .on('click.fndtn.topbar', '.top-bar .has-dropdown>a, [data-topbar] .has-dropdown>a', function (e) {\n          if (self.breakpoint()) {\n            e.preventDefault();\n\n            var $this = $(this),\n                topbar = $this.closest('.top-bar, [data-topbar]'),\n                section = topbar.find('section, .section'),\n                titlebar = topbar.children('ul').first(),\n                dropdownHeight = $this.next('.dropdown').outerHeight(),\n                $selectedLi = $this.closest('li');\n\n            topbar.data('index', topbar.data('index') + 1);\n            $selectedLi.addClass('moved');\n\n            if (!self.rtl) {\n              section.css({left: -(100 * topbar.data('index')) + '%'});\n              section.find('>.name').css({left: 100 * topbar.data('index') + '%'});\n            } else {\n              section.css({right: -(100 * topbar.data('index')) + '%'});\n              section.find('>.name').css({right: 100 * topbar.data('index') + '%'});\n            }\n\n            topbar.css('min-height', self.height($this.siblings('ul')) + self.outerHeight(titlebar, true));\n          }\n        });\n\n      $(window).on('resize.fndtn.topbar', function () {\n        if (!self.breakpoint()) {\n          $('.top-bar, [data-topbar]')\n            .css('min-height', '')\n            .removeClass('expanded')\n            .find('li')\n            .removeClass('hover');\n        }\n      }.bind(this));\n\n      $('body').on('click.fndtn.topbar', function (e) {\n        var parent = $(e.target).closest('[data-topbar], .top-bar');\n\n        if (parent.length > 0) {\n          return;\n        }\n\n        $('.top-bar li, [data-topbar] li').removeClass('hover');\n      });\n\n      // Go up a level on Click\n      $(this.scope).on('click.fndtn', '.top-bar .has-dropdown .back, [data-topbar] .has-dropdown .back', function (e) {\n        e.preventDefault();\n\n        var $this = $(this),\n            topbar = $this.closest('.top-bar, [data-topbar]'),\n            titlebar = topbar.children('ul').first(),\n            section = topbar.find('section, .section'),\n            $movedLi = $this.closest('li.moved'),\n            $previousLevelUl = $movedLi.parent();\n\n        topbar.data('index', topbar.data('index') - 1);\n\n        if (!self.rtl) {\n          section.css({left: -(100 * topbar.data('index')) + '%'});\n          section.find('>.name').css({left: 100 * topbar.data('index') + '%'});\n        } else {\n          section.css({right: -(100 * topbar.data('index')) + '%'});\n          section.find('>.name').css({right: 100 * topbar.data('index') + '%'});\n        }\n\n        if (topbar.data('index') === 0) {\n          topbar.css('min-height', 0);\n        } else {\n          topbar.css('min-height', self.height($previousLevelUl) + self.outerHeight(titlebar, true));\n        }\n\n        setTimeout(function () {\n          $movedLi.removeClass('moved');\n        }, 300);\n      });\n    },\n\n    breakpoint : function () {\n      return $(window).width() <= this.settings.breakPoint || $('html').hasClass('lt-ie9');\n    },\n\n    assemble : function () {\n      var self = this;\n      // Pull element out of the DOM for manipulation\n      this.settings.$section.detach();\n\n      this.settings.$section.find('.has-dropdown>a').each(function () {\n        var $link = $(this),\n            $dropdown = $link.siblings('.dropdown'),\n            url = $link.attr('href');\n\n        if (url && url.length > 1) {\n          var $titleLi = $('<li class=\"title back js-generated\"><h5><a href=\"#\"></a></h5></li><li><a class=\"parent-link js-generated\" href=\"' + url + '\">' + $link.text() +'</a></li>');\n        } else {\n          var $titleLi = $('<li class=\"title back js-generated\"><h5><a href=\"#\"></a></h5></li>');\n        }\n\n        // Copy link to subnav\n        if (self.settings.custom_back_text == true) {\n          $titleLi.find('h5>a').html('&laquo; ' + self.settings.back_text);\n        } else {\n          $titleLi.find('h5>a').html('&laquo; ' + $link.html());\n        }\n        $dropdown.prepend($titleLi);\n      });\n\n      // Put element back in the DOM\n      this.settings.$section.appendTo(this.settings.$topbar);\n\n      // check for sticky\n      this.sticky();\n    },\n\n    height : function (ul) {\n      var total = 0,\n          self = this;\n\n      ul.find('> li').each(function () { total += self.outerHeight($(this), true); });\n\n      return total;\n    },\n\n    sticky : function () {\n      var klass = '.' + this.settings.stickyClass;\n      if ($(klass).length > 0) {\n        var distance = $(klass).length ? $(klass).offset().top: 0,\n            $window = $(window);\n            var offst = this.outerHeight($('.top-bar'));\n\n          $window.scroll(function() {\n            if ($window.scrollTop() >= (distance)) {\n              $(klass).addClass(\"fixed\");\n              $('body').css('padding-top',offst);\n            }\n\n            else if ($window.scrollTop() < distance) {\n              $(klass).removeClass(\"fixed\");\n              $('body').css('padding-top','0');\n            }\n        });\n      }\n    },\n\n    off : function () {\n      $(this.scope).off('.fndtn.topbar');\n      $(window).off('.fndtn.topbar');\n    },\n\n    reflow : function () {}\n  };\n}(Foundation.zj, this, this.document));\n","/home/travis/build/npmtest/node-npmtest-foundation/node_modules/foundation/js/foundation/index.js":"/*\n=require foundation/foundation\n=require foundation/foundation.alerts\n=require foundation/foundation.clearing\n=require foundation/foundation.cookie\n=require foundation/foundation.dropdown\n=require foundation/foundation.forms\n=require foundation/foundation.joyride\n=require foundation/foundation.magellan\n=require foundation/foundation.orbit\n=require foundation/foundation.placeholder\n=require foundation/foundation.reveal\n=require foundation/foundation.section\n=require foundation/foundation.tooltips\n=require foundation/foundation.topbar\n=require foundation/foundation.interchange\n*/"}